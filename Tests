local LocalPlayer = game.Players.LocalPlayer

local Camera = game:GetService("Workspace").CurrentCamera

local CollectionService = game:GetService("CollectionService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local StatisticsService = game:GetService("Stats")
local UserInputService = game:GetService("UserInputService")
local LightingService = game:GetService("Lighting")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")

local LocalPlayer = game.Players.LocalPlayer
local Players = game.Players:GetPlayers()

local AlSploit = Instance.new("ScreenGui")
local ContainerFrame = Instance.new("Frame")
local UIListLayoutContainerFrame = Instance.new("UIListLayout")

local DefaultLayoutOrder = 0

AlSploit.Name = "AlSploit"
AlSploit.Parent = LocalPlayer:WaitForChild("PlayerGui")
AlSploit.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
AlSploit.ResetOnSpawn = false

ContainerFrame.Name = "ContainerFrame"
ContainerFrame.Parent = AlSploit
ContainerFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ContainerFrame.BackgroundTransparency = 1.000
ContainerFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
ContainerFrame.BorderSizePixel = 0
ContainerFrame.Position = UDim2.new(0, 0, 0.0480132438, 0)
ContainerFrame.Size = UDim2.new(1, 0, 0.970330536, 0)
ContainerFrame.Visible = false

UIListLayoutContainerFrame.Parent = ContainerFrame
UIListLayoutContainerFrame.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayoutContainerFrame.Padding = UDim.new(0, 50)
UIListLayoutContainerFrame.FillDirection = Enum.FillDirection.Horizontal
UIListLayoutContainerFrame.HorizontalAlignment = Enum.HorizontalAlignment.Center

local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
local UIStroke = Instance.new("UIStroke")
local UICorner = Instance.new("UICorner")
local Open = Instance.new("ImageButton")

UIStroke.Parent = Open
UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke.Thickness = 2
UIStroke.Color = Color3.new(0.635294, 0.313725, 1)

Open.Name = "Open"
Open.Parent = AlSploit
Open.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Open.BorderColor3 = Color3.fromRGB(0, 0, 0)
Open.BorderSizePixel = 0
Open.Position = UDim2.new(0.963096738, 0, 0.351765305, 0)
Open.Size = UDim2.new(0.0329854637, 0, 0.0837961882, 0)
Open.Image = "rbxassetid://15428841655"

UICorner.CornerRadius = UDim.new(0, 6)
UICorner.Parent = Open

UIAspectRatioConstraint.Parent = Open
UIAspectRatioConstraint.AspectRatio = 1

local Blur = Instance.new("BlurEffect")

Blur.Parent = LightingService
Blur.Enabled = false
Blur.Size = 16

task.spawn(function()
	Open.Activated:Connect(function()
		ContainerFrame.Visible = not ContainerFrame.Visible

		Blur.Enabled = not Blur.Enabled
	end)
end)

function CreateWindow(Name)
	local Window = Instance.new("Frame")
	local Decoration = Instance.new("Frame")
	local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
	local Decoration_2 = Instance.new("Frame")
	local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
	local Settings = Instance.new("ImageButton")
	local UIAspectRatioConstraint_3 = Instance.new("UIAspectRatioConstraint")
	local UICorner = Instance.new("UICorner")
	local ToggleContainer = Instance.new("Frame")
	local UIListLayout = Instance.new("UIListLayout")
	local Title = Instance.new("TextLabel")
	local UIAspectRatioConstraint_12 = Instance.new("UIAspectRatioConstraint")
	local UITextSizeConstraint_5 = Instance.new("UITextSizeConstraint")
	local UIAspectRatioConstraint_13 = Instance.new("UIAspectRatioConstraint")
	local UIAspectRatioConstraint_11 = Instance.new("UIAspectRatioConstraint")

	Window.Name = Name .. "Window"
	Window.Parent = ContainerFrame
	Window.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	Window.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Window.BorderSizePixel = 0
	Window.Position = UDim2.new(0.172071472, 0, 0.027300043, 0)
	Window.Size = UDim2.new(0.154698864, 0, 0.0580125935, 0)

	Decoration.Name = "Decoration"
	Decoration.Parent = Window
	Decoration.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	Decoration.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Decoration.BorderSizePixel = 0
	Decoration.Position = UDim2.new(0, 0, 0.588235319, 0)
	Decoration.Size = UDim2.new(1, 0, 0.588235319, 0)

	UIAspectRatioConstraint.Parent = Decoration
	UIAspectRatioConstraint.AspectRatio = 9.350

	Decoration_2.Name = "Decoration"
	Decoration_2.Parent = Window
	Decoration_2.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	Decoration_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Decoration_2.BorderSizePixel = 0
	Decoration_2.Position = UDim2.new(0, 0, 1.17647064, 0)
	Decoration_2.Size = UDim2.new(1, 0, 0.0588235296, 0)

	UIAspectRatioConstraint_2.Parent = Decoration_2
	UIAspectRatioConstraint_2.AspectRatio = 93.500

	Settings.Name = "Settings"
	Settings.Parent = Window
	Settings.BackgroundTransparency = 1.000
	Settings.Position = UDim2.new(0.817474544, 0, 0.263130188, 0)
	Settings.Size = UDim2.new(0.133689836, 0, 0.735294104, 0)
	Settings.ZIndex = 2
	Settings.Image = "rbxassetid://3926307971"
	Settings.ImageColor3 = Color3.fromRGB(207, 207, 207)
	Settings.ImageRectOffset = Vector2.new(324, 124)
	Settings.ImageRectSize = Vector2.new(36, 36)

	UIAspectRatioConstraint_3.Parent = Settings

	UICorner.Parent = Window

	ToggleContainer.Name = "ToggleContainer"
	ToggleContainer.Parent = Window
	ToggleContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ToggleContainer.BackgroundTransparency = 1.000
	ToggleContainer.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ToggleContainer.BorderSizePixel = 0
	ToggleContainer.Position = UDim2.new(0, 0, 1.2352941, 0)
	ToggleContainer.Size = UDim2.new(1, 0, 14.7058821, 0)

	UIListLayout.Parent = ToggleContainer
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

	Title.Name = "Title"
	Title.Parent = Window
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Title.BorderSizePixel = 0
	Title.Position = UDim2.new(0, 0, 0.0294117648, 0)
	Title.Size = UDim2.new(0.641711235, 0, 1.17647064, 0)
	Title.Font = Enum.Font.FredokaOne
	Title.Text = Name
	Title.TextColor3 = Color3.fromRGB(207, 207, 207)
	Title.TextScaled = true
	Title.TextSize = 25.000
	Title.TextWrapped = true

	UIAspectRatioConstraint_12.Parent = Title
	UIAspectRatioConstraint_12.AspectRatio = 3.000

	UITextSizeConstraint_5.Parent = Title
	UITextSizeConstraint_5.MaxTextSize = 25

	UIAspectRatioConstraint_13.Parent = Window
	UIAspectRatioConstraint_13.AspectRatio = 5.500

	UIAspectRatioConstraint_11.Parent = ToggleContainer
	UIAspectRatioConstraint_11.AspectRatio = 0.374

	return ToggleContainer
end

function CreateToggle(Parent, Name, DefaultValue, Callback)
	local Toggle = Instance.new("TextButton")
	local DropdownButton = Instance.new("ImageButton")
	local UIAspectRatioConstraint_4 = Instance.new("UIAspectRatioConstraint")
	local UIAspectRatioConstraint_5 = Instance.new("UIAspectRatioConstraint")
	local UITextSizeConstraint = Instance.new("UITextSizeConstraint")

	local Checker = {["Enabled"] = false}

	local LayoutOrder = 0

	function Checker:Toggle(Bool)
		Bool = Bool or (not Checker["Enabled"])
		Checker["Enabled"] = Bool

		if not Bool then
			spawn(function()
				Callback(false)
				Toggle.TextColor3 = Color3.fromRGB(226, 226, 226)
			end)
		else
			spawn(function()
				Callback(true)
				Toggle.TextColor3 = Color3.new(0.635294, 0.313725, 1)
			end)
		end
	end

	if DefaultValue == true then
		Checker:Toggle()
	end

	task.spawn(function()
		Toggle.Activated:Connect(function()
			Checker:Toggle()	
		end)
	end)	

	Toggle.Name = Name .. "Toggle"
	Toggle.Parent = Parent
	Toggle.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
	Toggle.BackgroundTransparency = 0.050
	Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Toggle.BorderSizePixel = 0
	Toggle.Position = UDim2.new(-0.278074861, 0, -0.0118694361, 0)
	Toggle.Size = UDim2.new(1, 0, 0.109999999, 0)
	Toggle.AutoButtonColor = false
	Toggle.Font = Enum.Font.FredokaOne
	Toggle.Text = "    " .. Name
	Toggle.TextColor3 = Color3.fromRGB(218, 218, 218)
	Toggle.TextScaled = false
	Toggle.TextSize = 19.000
	Toggle.TextWrapped = true
	Toggle.TextXAlignment = Enum.TextXAlignment.Left
	Toggle.LayoutOrder = DefaultLayoutOrder + 5

	LayoutOrder = Toggle.LayoutOrder
	DefaultLayoutOrder = LayoutOrder

	DropdownButton.Name = "DropdownButton"
	DropdownButton.Parent = Toggle
	DropdownButton.BackgroundTransparency = 1.000
	DropdownButton.LayoutOrder = 3
	DropdownButton.Position = UDim2.new(0.742407143, 0, 0.230918333, 0)
	DropdownButton.Size = UDim2.new(0.14973262, 0, 0.5090909, 0)
	DropdownButton.ZIndex = 2
	DropdownButton.Image = "rbxassetid://3926307971"
	DropdownButton.ImageRectOffset = Vector2.new(324, 364)
	DropdownButton.ImageRectSize = Vector2.new(36, 36)

	UIAspectRatioConstraint_4.Parent = DropdownButton
	UIAspectRatioConstraint_4.AspectRatio = 1.000

	UIAspectRatioConstraint_5.Parent = Toggle
	UIAspectRatioConstraint_5.AspectRatio = 3.400

	UITextSizeConstraint.Parent = Toggle
	UITextSizeConstraint.MaxTextSize = 19

	return Toggle, DropdownButton, LayoutOrder
end

function CreateMiniToggle(Parent, Name, DefaultValue, LayoutOrder, Callback)
	local MiniToggle = Instance.new("TextButton")
	local UIAspectRatioConstraint_6 = Instance.new("UIAspectRatioConstraint")
	local UITextSizeConstraint_2 = Instance.new("UITextSizeConstraint")

	local Checker = {["Enabled"] = false}

	function Checker:Toggle(Bool)
		Bool = Bool or (not Checker["Enabled"])
		Checker["Enabled"] = Bool

		if not Bool then
			spawn(function()
				Callback(false)
				MiniToggle.TextColor3 = Color3.fromRGB(226, 226, 226)
			end)
		else
			spawn(function()
				Callback(true)
				MiniToggle.TextColor3 = Color3.new(0.635294, 0.313725, 1)
			end)
		end
	end

	if DefaultValue == true then
		Checker:Toggle()
	end

	task.spawn(function()
		MiniToggle.Activated:Connect(function()
			Checker:Toggle()	
		end)
	end)	

	MiniToggle.Name = Name .. "MiniToggle"
	MiniToggle.Parent = Parent
	MiniToggle.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
	MiniToggle.BackgroundTransparency = 0.050
	MiniToggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
	MiniToggle.BorderSizePixel = 0
	MiniToggle.Position = UDim2.new(0, 0, 0.660000026, 0)
	MiniToggle.Size = UDim2.new(1, 0, 0.0599999987, 0)
	MiniToggle.AutoButtonColor = false
	MiniToggle.Font = Enum.Font.FredokaOne
	MiniToggle.Text = Name
	MiniToggle.TextColor3 = Color3.fromRGB(218, 218, 218)
	MiniToggle.TextScaled = true
	MiniToggle.TextSize = 14.000
	MiniToggle.TextWrapped = true
	MiniToggle.LayoutOrder = LayoutOrder

	UIAspectRatioConstraint_6.Parent = MiniToggle
	UIAspectRatioConstraint_6.AspectRatio = 6.233

	UITextSizeConstraint_2.Parent = MiniToggle
	UITextSizeConstraint_2.MaxTextSize = 14

	return MiniToggle
end

function CreateSlider(Parent, Name, DefaultValue, MaxValue, MinValue, LayoutOrder, Callback)
	local UIStroke_1  = Instance.new("UIStroke")
	local UIStroke_2  = Instance.new("UIStroke")
	local Slider = Instance.new("Frame")
	local Slider_2 = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local Bar = Instance.new("TextButton")
	local UICorner_3 = Instance.new("UICorner")
	local UIAspectRatioConstraint_7 = Instance.new("UIAspectRatioConstraint")
	local UITextSizeConstraint_3 = Instance.new("UITextSizeConstraint")
	local TextLabel = Instance.new("TextLabel")
	local UIAspectRatioConstraint_8 = Instance.new("UIAspectRatioConstraint")
	local UITextSizeConstraint_4 = Instance.new("UITextSizeConstraint")
	local UIAspectRatioConstraint_9 = Instance.new("UIAspectRatioConstraint")
	local UIAspectRatioConstraint_10 = Instance.new("UIAspectRatioConstraint")

	local UIListLayout_2 = Instance.new("UIListLayout")
	local UIAspectRatioConstraint_14 = Instance.new("UIAspectRatioConstraint")

	Slider.Name = Name .. "Slider"
	Slider.Parent = Parent
	Slider.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
	Slider.BackgroundTransparency = 0.050
	Slider.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Slider.BorderSizePixel = 0
	Slider.Position = UDim2.new(0, 0, 0.170000002, 0)
	Slider.Size = UDim2.new(1, 0, 0.140000001, 0)
	Slider.LayoutOrder = LayoutOrder

	Slider_2.Name = "Slider"
	Slider_2.Parent = Slider
	Slider_2.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
	Slider_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Slider_2.BorderSizePixel = 0
	Slider_2.Position = UDim2.new(0.229946524, 0, 0.267857134, 0)
	Slider_2.Size = UDim2.new(0.534759343, 0, 0.0857142881, 0)

	UICorner_2.Parent = Slider_2

	Bar.Name = "Bar"
	Bar.Parent = Slider_2
	Bar.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
	Bar.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Bar.BorderSizePixel = 0
	Bar.Position = UDim2.new(0.219999999, 0, -1.5, 0)
	Bar.Size = UDim2.new(0.0599999987, 0, 4.16666651, 0)
	Bar.Font = Enum.Font.SourceSans
	Bar.Text = ""
	Bar.TextColor3 = Color3.fromRGB(0, 0, 0)
	Bar.TextScaled = true
	Bar.TextSize = 14.000
	Bar.TextWrapped = true
	Bar.AutoButtonColor = false

	UICorner_3.Parent = Bar

	UIAspectRatioConstraint_7.Parent = Bar
	UIAspectRatioConstraint_7.AspectRatio = 0.240

	UITextSizeConstraint_3.Parent = Bar
	UITextSizeConstraint_3.MaxTextSize = 14

	TextLabel.Parent = Slider_2
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.BorderSizePixel = 0
	TextLabel.Position = UDim2.new(-0.100000001, 0, 5, 0)
	TextLabel.Size = UDim2.new(1.20000005, 0, 2.5, 0)
	TextLabel.Font = Enum.Font.FredokaOne
	TextLabel.Text = Name .. ": " .. DefaultValue
	TextLabel.TextColor3 = Color3.new(0.635294, 0.313725, 1)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 16.000
	TextLabel.TextWrapped = true

	UIAspectRatioConstraint_8.Parent = TextLabel
	UIAspectRatioConstraint_8.AspectRatio = 8.000

	UITextSizeConstraint_4.Parent = TextLabel
	UITextSizeConstraint_4.MaxTextSize = 16

	UIAspectRatioConstraint_9.Parent = Slider_2
	UIAspectRatioConstraint_9.AspectRatio = 16.667

	UIAspectRatioConstraint_10.Parent = Slider
	UIAspectRatioConstraint_10.AspectRatio = 2.671


	UIListLayout_2.Parent = ContainerFrame
	UIListLayout_2.FillDirection = Enum.FillDirection.Horizontal
	UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
	UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout_2.Padding = UDim.new(0, 100)

	UIAspectRatioConstraint_14.Parent = ContainerFrame
	UIAspectRatioConstraint_14.AspectRatio = 2.063

	UIStroke_1.Parent = Slider_2
	UIStroke_1.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke_1.Thickness = 2
	UIStroke_1.Color = Color3.new(0.635294, 0.313725, 1)

	UIStroke_2.Parent = Bar
	UIStroke_2.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke_2.Thickness = 2
	UIStroke_2.Color = Color3.new(0.635294, 0.313725, 1)	

	local Debounce = true

	local function Snap(Number, Factor)
		if Factor == 0 then
			return Number
		else
			return math.floor(Number / Factor + 0.5) * Factor

		end
	end

	task.spawn(function()
		Bar.MouseButton1Down:Connect(function()
			Debounce = false
		end)

		UserInputService.InputEnded:connect(function(Input)
			if Input.UserInputType == Enum.UserInputType.MouseButton1 then
				Debounce = true
			end
		end)
	end)

	task.spawn(function()
		local BarPosition = Bar.Position

		local TweenInformation = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
		local PositionTween = TweenService:Create(Bar, TweenInformation, {Position = UDim2.new(DefaultValue / MaxValue, 0, BarPosition.Y.Scale, BarPosition.Y.Offset)})

		PositionTween:Play()
	end)

	task.spawn(function()
		repeat
			task.wait()

			if Debounce == false then
				local MousePosition = UserInputService:GetMouseLocation().X
				local BarPosition = Bar.Position
				local FrameSize = Slider.AbsoluteSize.X
				local FramePosition = Slider.AbsolutePosition.X

				local Position = Snap((MousePosition - FramePosition) / FrameSize, 0.01)

				local Percentage = math.clamp(Position, 0, 1)

				local TweenInformation = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
				local PositionTween = TweenService:Create(Bar, TweenInformation, {Position = UDim2.new(Percentage, 0, BarPosition.Y.Scale, BarPosition.Y.Offset)})

				PositionTween:Play()

				TextLabel.Text = Name .. ": " .. math.round(Percentage * MaxValue)

				Callback(math.round(Percentage * MaxValue))
			end
		until not Slider
	end)
	
	return Slider
end

function CreateFlyHud()
	local Main = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local NumberDisplay = Instance.new("TextLabel")
	local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
	local DisplayBackground = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local Display = Instance.new("Frame")
	local UICorner_3 = Instance.new("UICorner")
	local UIStroke = Instance.new("UIStroke")

	UIStroke.Parent = Main
	UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke.Color = Color3.new(0.635294, 0.313725, 1)
	UIStroke.Thickness = 3

	task.spawn(function()
		repeat
			task.wait(0.001)

			UIStroke.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
		until not game
	end)

	Main.Name = "Main"
	Main.Parent = AlSploit
	Main.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Main.BackgroundTransparency = 0.600
	Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Main.BorderSizePixel = 0
	Main.Position = UDim2.new(0.3935, 0, 0.7, 0)
	Main.Size = UDim2.new(0, 230, 0, 60)
	Main.ZIndex = 3

	UICorner.CornerRadius = UDim.new(0, 16)
	UICorner.Parent = Main

	NumberDisplay.Name = "NumberDisplay"
	NumberDisplay.Parent = Main
	NumberDisplay.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	NumberDisplay.BackgroundTransparency = 1.000
	NumberDisplay.BorderColor3 = Color3.fromRGB(0, 0, 0)
	NumberDisplay.BorderSizePixel = 0
	NumberDisplay.Position = UDim2.new(0.117391303, 0, 0.100000001, 0)
	NumberDisplay.Size = UDim2.new(0.766666651, 0, 0.294117659, 0)
	NumberDisplay.ZIndex = 3
	NumberDisplay.Font = Enum.Font.FredokaOne
	NumberDisplay.Text = "2.5"
	NumberDisplay.TextColor3 = Color3.fromRGB(255, 255, 255)
	NumberDisplay.TextSize = 30.000
	NumberDisplay.TextWrapped = true

	UIAspectRatioConstraint.Parent = NumberDisplay
	UIAspectRatioConstraint.AspectRatio = 9.992

	DisplayBackground.Name = "DisplayBackground"
	DisplayBackground.Parent = Main
	DisplayBackground.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
	DisplayBackground.BorderColor3 = Color3.fromRGB(0, 0, 0)
	DisplayBackground.BorderSizePixel = 0
	DisplayBackground.Position = UDim2.new(0.173913315, 0, 0.633333325, 0)
	DisplayBackground.Size = UDim2.new(0.651159286, 0, 0.150980309, 0)
	DisplayBackground.ZIndex = 4

	UICorner_2.Parent = DisplayBackground

	Display.Name = "Display"
	Display.Parent = DisplayBackground
	Display.BackgroundColor3 = Color3.fromRGB(170, 0, 255)
	Display.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Display.BorderSizePixel = 0
	Display.Position = UDim2.new(0, 0, 0, 0)
	Display.Size = UDim2.new(0, 0, 1, 0)
	Display.ZIndex = 5

	UICorner_3.Parent = Display

	return Main, NumberDisplay, Display
end

local Settings = {
	ChestStealer = {Value = true},
	InfiniteJump = {Value = true},
	FpsBooster = {Value = false},
	Indicators = {Value = true},
	GalaxySky = {Value = true},
	PlayAgain = {Value = true},
	AimAssist = {Value = true},
	KillAura = {Value = true, Range = 20, CustomAnimation = true,},
	Velocity = {Value = true},	
	AntiVoid = {Value = true, Transparency = 0.65},
	Sprint = {Value = true},
	NoFall = {Value = true},
	Aimbot = {Value = true},
	Speed = {Value = true, Speed = 23},
	Reach = {Value = true},
	Nuker = {Value = true, Range = 30},
	Cape = {Value = true},
	Esp = {Value = true}
}

local KnitClient = debug.getupvalue(require(LocalPlayer.PlayerScripts.TS.knit).setup, 6)
local Client = require(ReplicatedStorage.TS.remotes).default.Client
local OrigC0 = ReplicatedStorage.Assets.Viewmodel.RightHand.RightWrist.C0

local CollectionServiceBlocks = CollectionService:GetTagged("block")

local KillAuraAnimationCooldown = true
local JumpCooldown = false
local AntiVoidPart = nil
local FirstHit = true

local Animations = {
	["Slow"] = {
		{CFrame = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(220), math.rad(100), math.rad(100)),Time = 0.25},
		{CFrame = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), Time = 0.25}
	}
}

function GetRemote(Remote)
	for i, v in next, (Remote) do
		if v == "Client" then
			return Remote[i + 1]
		end
	end
	
	return ""
end

local Bedwars = {
	ClientHandlerStore = require(LocalPlayer.PlayerScripts.TS.ui.store).ClientStore,
	SprintController = KnitClient.Controllers.SprintController,
	DamageIndicator = KnitClient.Controllers.DamageIndicatorController.spawnDamageIndicator,
	KnockbackTable = debug.getupvalue(require(ReplicatedStorage.TS.damage["knockback-util"]).KnockbackUtil.calculateKnockbackVelocity, 1),
	CombatConstant = require(ReplicatedStorage.TS.combat["combat-constant"]).CombatConstant,	
	PickupRemote = GetRemote(debug.getconstants(KnitClient.Controllers.ItemDropController.checkForPickup)),
}

local ResetCharacterRemote = ReplicatedStorage:WaitForChild("rbxts_include"):WaitForChild("node_modules"):WaitForChild("@rbxts"):WaitForChild("net"):WaitForChild("out"):WaitForChild("_NetManaged"):WaitForChild("ResetCharacter")
local ProjectileRemote = ReplicatedStorage.rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.ProjectileFire
local KillauraRemote = ReplicatedStorage.rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.SwordHit
local BedwarsSwords = require(ReplicatedStorage.TS.games.bedwars["bedwars-swords"]).BedwarsMelees

function FindNearestPlayer(MaxDistance)
	local NearestDistance = MaxDistance or math.huge
	local NearestPlayer

	for i, v in next, (Players) do
		if IsAlive(v) and v ~= LocalPlayer and IsAlive(LocalPlayer) and v.Team ~= LocalPlayer.Team then
			local Distance = (v.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude

			if Distance < NearestDistance then
				NearestPlayer = v
				NearestDistance = Distance
			end
		end
	end

	return NearestPlayer, NearestDistance
end

function FpsBoostTextures()
	for i, v in next, (CollectionServiceBlocks) do
		if v:GetAttribute("PlacedByUserId") == 0 then
			v.Material = Enum.Material.SmoothPlastic or (v.Name:find("glass") and Enum.Material.SmoothPlastic or Enum.Material.Fabric)

			for i2, v2 in next, (v:GetDescendants()) do
				if v2:IsA("BasePart") then
					v2.Material = Enum.Material.SmoothPlastic or (v.Name:find("glass") and Enum.Material.SmoothPlastic or Enum.Material.Fabric)
				end
			end
		end
	end
end

function ShootProjectile(Item, Projectile)
	local NearestPlayer = FindNearestPlayer()

	if NearestPlayer then
		local Args = {
			[1] = ReplicatedStorage.Inventories[game.Players.LocalPlayer.Name]:FindFirstChild(Item),
			[2] = Projectile,
			[3] = Projectile,
			[4] = NearestPlayer.Character.HumanoidRootPart.Position,
			[5] = NearestPlayer.Character.HumanoidRootPart.Position,
			[6] = Vector3.new(0, -25, 0),
			[7] = HttpService:GenerateGUID(true),
			[8] = {
				["drawDurationSeconds"] = (FirstHit and 0.96 or 0.1),
				["shotId"] = HttpService:GenerateGUID(false)
			},
			[9] = (game.Workspace:GetServerTimeNow() - 0.11)
		}

		ProjectileRemote:InvokeServer(unpack(Args))
	end		
end

function TouchingGround()
	local Parameters = RaycastParams.new()
	Parameters.FilterType = Enum.RaycastFilterType.Include
	Parameters.FilterDescendantsInstances = {CollectionServiceBlocks}

	local IsTouchingFloor = false

	for x = 1, 1 do
		local Origin = LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(x, 0, 0)
		local Raycast = game.Workspace:Raycast(Origin, Vector3.new(0, -2.5, 0), Parameters)
		if Raycast and Raycast.Instance then
			IsTouchingFloor = true			
		end
	end	

	return IsTouchingFloor
end

function FindNearestBed()
	local NearestBed = nil
	local MinDistance = math.huge
	
	for i, v in next, game.Workspace:GetDescendants() do
		if v.Name:lower() == "bed" and v:FindFirstChild("Covers") and v:FindFirstChild("Covers").BrickColor ~= LocalPlayer.Team.TeamColor then
			local Distance = (v.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
			if Distance < MinDistance then
				NearestBed = v
				MinDistance = Distance
			end
		end
	end

	return NearestBed
end

function GetMatchState()
	return Bedwars.ClientHandlerStore:getState().Game.matchState
end

local IsNetworkOwner = isnetworkowner or (gethiddenproperty and function(part)
	if gethiddenproperty(part, "NetworkOwnershipRule") == Enum.NetworkOwnership.Manual then 
		return false
	end
	return true
end) or function() return true end

function GetInventory(Player)

	if not Player then 
		return {Items = {}, Armor = {}}
	end

	local Success, Return = pcall(function() 
		return require(ReplicatedStorage.TS.inventory["inventory-util"]).InventoryUtil.getInventory(Player)
	end)

	if not Success then 
		return {Items = {}, Armor = {}}
	end
	if Player.Character and Player.Character:FindFirstChild("InventoryFolder") then 
		local InvFolder = Player.Character:FindFirstChild("InventoryFolder").Value
		if not InvFolder then return Return end
		for i, v in next, Return do 
			for i2, v2 in next, v do 
				if typeof(v2) == 'table' and v2.itemType then
					v2.instance = InvFolder:FindFirstChild(v2.itemType)
				end
			end
			if typeof(v) == 'table' and v.itemType then
				v.instance = InvFolder:FindFirstChild(v.itemType)
			end
		end
	end

	return Return
end

function DecimalRound(Number, DigitsPast0)
	DigitsPast0 = math.pow(10, DigitsPast0 or 0)

	Number = Number * DigitsPast0

	if Number >= 0 then 
		Number = math.floor(Number + 0.5) 
	else 
		Number = math.ceil(Number - 0.5) 
	end

	return Number / DigitsPast0
end

function GetQueueType()
	local State = Bedwars.ClientHandlerStore:getState()

	return State.Game.queueType or "bedwars_test"
end

function KillHumanoid(Time)
	task.wait(Time)

	if LocalPlayer:FindFirstChild("leaderstats") and LocalPlayer.leaderstats:FindFirstChild("Bed") then
		if LocalPlayer.leaderstats.Bed.Value == "✅" then
			LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Dead)

			ResetCharacterRemote:FireServer()
		end
	end
end

function SetCamera(Camera)
	game.Workspace.CurrentCamera.CameraSubject = Camera
end

function GetSword()
	local Highest, Returning = -9e9, nil

	for i, v in next, GetInventory(LocalPlayer).items do 
		local Power = table.find(BedwarsSwords, v.itemType)

		if not Power then continue end 
		if Power > Highest then 
			Returning = v
			Highest = Power
		end
	end

	return Returning
end

function IsMoving()	
	local Position = LocalPlayer.Character.HumanoidRootPart.Position

	task.wait(0.001)

	if IsAlive(LocalPlayer) and LocalPlayer.Character.HumanoidRootPart.Position ~= Position then
		Position = LocalPlayer.Character.HumanoidRootPart.Position
		return true
	end

	if IsAlive(LocalPlayer) and LocalPlayer.Character.HumanoidRootPart.Position == Position then
		Position = LocalPlayer.Character.HumanoidRootPart.Position
		return false
	end
end

function GetSpeed()
	local Speed = 0

	if IsAlive(LocalPlayer) then 

		local SpeedDamageBoost =  LocalPlayer.Character:GetAttribute("SpeedBoost")

		if SpeedDamageBoost and SpeedDamageBoost > 1 then 
			Speed = Speed + (22 * (SpeedDamageBoost - 1))
		end

		if LocalPlayer.Character:GetAttribute("SpeedPieBuff") then 
			Speed = Speed + 5
		end

		if LocalPlayer.Character:GetAttribute("GrimReaperChannel") then 
			Speed = Speed + 20
		end

		local Armor = GetInventory().Armor[3]

		if type(Armor) ~= "table" then Armor = {itemType = ""} end

		if Armor.itemType == "Speed_boots" then 
			Speed = Speed + 25
		end

		Speed = ((Speed + Settings.Speed.Speed) - 20)
	end

	return Speed
end

local function HashFunction(Value)
	return {value = Value}
end

function IsAlive(Player)
	Player = Player or LocalPlayer
	
	if not Player.Character then
		return false
	end
	
	if not Player.Character:FindFirstChild("Head") then		
		return false
	end
	
	if not Player.Character:FindFirstChild("Humanoid") then 
		return  false 
	end
	
	if Player.Character:GetAttribute("Health") <= 0 then 
		return  false 
	end
	
	if not Player.Character:FindFirstChild("HumanoidRootPart") then 	
		return  false 
	end	

	return true
end	

function GetItem(Name)
	for i, v in next, (GetInventory(LocalPlayer).items) do
		if v.itemType:find(Name) then
			return true
		end
	end	

	return false
end

task.spawn(function()
	local function KillAuraHit()	
		for i, v in next, Players do
			if IsAlive(v) and Settings.KillAura.Value == true and v.Team ~= LocalPlayer.Team then
				if GetMatchState() ~= 0 and IsAlive(LocalPlayer) then
					local LocalPlayerCharacter = LocalPlayer.Character
					local EnemyCharacter = v.Character

					local LocalPlayerHumanoidRootPart = LocalPlayerCharacter.HumanoidRootPart 
					local EnemyHumanoidRootPart = EnemyCharacter.HumanoidRootPart 

					local Magnitude = (LocalPlayerHumanoidRootPart.Position - EnemyHumanoidRootPart.Position).Magnitude

					if Magnitude <= Settings.KillAura.Range then
						local Sword = GetSword()

						if Sword then

							Magnitude = (LocalPlayerHumanoidRootPart.Position - EnemyHumanoidRootPart.Position).Magnitude

							spawn(function()
								if KillAuraAnimationCooldown and Settings.KillAura.CustomAnimation == true then
									KillAuraAnimationCooldown = false

									for i, v in next, Animations["Slow"] do
										TweenService:Create(Camera.Viewmodel.RightHand.RightWrist, TweenInfo.new(v.Time), {C0 = OrigC0 * v.CFrame}):Play()
										task.wait(v.Time - 0.01)
									end

									KillAuraAnimationCooldown = true
								end
							end)		

							local SelfPosition = LocalPlayerHumanoidRootPart.Position + (18 > 14 and (LocalPlayerHumanoidRootPart.Position - EnemyHumanoidRootPart.Position).Magnitude > 14.4 and (CFrame.lookAt(LocalPlayerHumanoidRootPart.Position, EnemyHumanoidRootPart.Position).lookVector * ((LocalPlayerHumanoidRootPart.Position - EnemyHumanoidRootPart.Position).Magnitude - 14)) or Vector3.zero)

							KillauraRemote:FireServer({
								weapon = Sword.tool,
								chargedAttack = {chargeRatio = 0},
								entityInstance = v.Character,
								validate = {
									raycast = {
										cameraPosition = HashFunction(LocalPlayerHumanoidRootPart.Position), 
										cursorDirection = HashFunction(CFrame.new(SelfPosition, EnemyHumanoidRootPart.Position).lookVector)
									},
									targetPosition = HashFunction(EnemyHumanoidRootPart.Position),
									selfPosition = HashFunction(SelfPosition)
								}
							})		
						end
					end
				end
			end
		end
	end

	task.spawn(function()
		repeat
			task.wait()
			task.spawn(KillAuraHit)
		until not game
	end)
end)

task.spawn(function()
	repeat
		task.wait(0.5)

		if Settings.NoFall.Value == true then
			Client:Get("GroundHit"):SendToServer()
		end
	until not game
end)	

local FlyGroundTime = tick()
local Flying = false

local FlyBodyVelocity
local FlyDown = false
local FlyUp = false

function Fly()
	Flying = not Flying

	if Flying == true then		
		local FlyHud, NumberDisplay, SliderDisplay = CreateFlyHud()

		task.spawn(function()
			repeat
				task.wait()

				if tick() - FlyGroundTime <= 2 then
					local MaxFlyTime = 2
					local FlyTime = DecimalRound(tick() - FlyGroundTime, 1)

					NumberDisplay.Text = FlyTime		

					local TweenInformation = TweenInfo.new(0.35, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, 0, false, 0)			
					local Tween = TweenService:Create(SliderDisplay, TweenInformation, {Size = UDim2.new(FlyTime / MaxFlyTime, 0, 1, 0)})

					Tween:Play()				
				end				

			until not Flying or not IsAlive(LocalPlayer)

			FlyHud:Destroy()
		end)

		task.spawn(function()			
			UserInputService.InputBegan:Connect(function(Input)
				if Input.KeyCode == Enum.KeyCode.Space then
					FlyUp = true
				end

				if Input.KeyCode == Enum.KeyCode.LeftShift then
					FlyDown = true
				end			
			end)

			UserInputService.InputEnded:Connect(function(Input)
				if Input.KeyCode == Enum.KeyCode.Space then
					FlyUp = false
				end

				if Input.KeyCode == Enum.KeyCode.LeftShift then
					FlyDown = false
				end
			end)			
		end)

		task.spawn(function()
			FlyBodyVelocity = Instance.new("BodyVelocity")
			FlyBodyVelocity.MaxForce = Vector3.new(0, 9e9, 0)
			FlyBodyVelocity.Name = "FlyBodyVelocity"
			FlyBodyVelocity.Parent = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")	

			FlyGroundTime = tick()

			repeat
				task.wait()

				if TouchingGround() then
					FlyGroundTime = tick()
				end

				if Flying == true and IsAlive(LocalPlayer) then
					FlyBodyVelocity.Velocity = Vector3.new(0, (FlyUp and 40 or 0) + (FlyDown and -40 or 0), 0)

					if (tick() - FlyGroundTime) >= 2 then
						local FlyTeleportPosition = -10000

						local RaycastParameters = RaycastParams.new()

						RaycastParameters.FilterType = Enum.RaycastFilterType.Include
						RaycastParameters.FilterDescendantsInstances = {CollectionServiceBlocks}

						local Raycast = workspace:Raycast(LocalPlayer.Character.HumanoidRootPart.Position, Vector3.new(0, -1000, 0), RaycastParameters)

						if Raycast and IsAlive(LocalPlayer) then 
							FlyTeleportPosition = LocalPlayer.Character.HumanoidRootPart.Position.Y

							local Args = {LocalPlayer.Character.HumanoidRootPart.CFrame:GetComponents()}
							
							Args[2] = Raycast.Position.Y + 1 + LocalPlayer.Character.Humanoid.HipHeight

							LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(unpack(Args))

							task.wait(0.12)

							if IsAlive(LocalPlayer) and FlyTeleportPosition ~= -10000 then 
								Args = {LocalPlayer.Character.HumanoidRootPart.CFrame:GetComponents()}
								Args[2] = FlyTeleportPosition

								LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(unpack(Args))

								FlyGroundTime = tick()
							end		
						end
					end
				end

			until not game
		end)
	end

	if not IsAlive(LocalPlayer) or Flying == false and LocalPlayer.Character.HumanoidRootPart:FindFirstChild("FlyBodyVelocity") then
		LocalPlayer.Character.HumanoidRootPart:FindFirstChild("FlyBodyVelocity"):Destroy()
		FlyGroundTime = tick()
	end
end

task.spawn(function()
	UserInputService.InputBegan:Connect(function(Input)
		if Input.KeyCode == Enum.KeyCode.Z then
			Fly()
		end
	end)
end)

local InfFlying = false
local SpoofedCamera = nil
local StartLevel = nil

local InfFlyUp = false
local InfFlyDown = false

local InfFlying = false
local SpoofedCamera = nil
local StartLevel = nil

local InfFlyUp = false
local InfFlyDown = false

function InfFly()
	InfFlying = not InfFlying

	if InfFlying == true and IsAlive(LocalPlayer) then
		task.spawn(function()
			UserInputService.InputBegan:Connect(function(Input)
				if Input.KeyCode == Enum.KeyCode.Space and not UserInputService:GetFocusedTextBox() then
					InfFlyUp = true
				end

				if Input.KeyCode == Enum.KeyCode.LeftShift and not UserInputService:GetFocusedTextBox() then
					InfFlyDown = true
				end
			end)

			UserInputService.InputEnded:Connect(function(Input)
				if Input.KeyCode == Enum.KeyCode.Space and not UserInputService:GetFocusedTextBox() then
					InfFlyUp = false
				end

				if Input.KeyCode == Enum.KeyCode.LeftShift and not UserInputService:GetFocusedTextBox() then
					InfFlyDown = false
				end
			end)
		end)

		StartLevel = LocalPlayer.Character.Head.Position.Y

		SpoofedCamera = Instance.new("Part")
		SpoofedCamera.Parent = game.Workspace
		SpoofedCamera.Anchored = true
		SpoofedCamera.Transparency = 1
		SpoofedCamera.Position = LocalPlayer.Character.Head.Position

		SetCamera(SpoofedCamera)
		LocalPlayer.Character.PrimaryPart.CFrame += Vector3.new(0, 1000000, 0)
		SpoofedCamera.Position = Vector3.new(SpoofedCamera.Position.X, StartLevel, SpoofedCamera.Position.Z)

		repeat task.wait()
			SpoofedCamera.Position = Vector3.new(LocalPlayer.Character.PrimaryPart.Position.X, SpoofedCamera.Position.Y + (InfFlyUp and 1 or 0) + (InfFlyDown and -1 or 0), LocalPlayer.Character.PrimaryPart.Position.Z)
			StartLevel = SpoofedCamera.Position.Y	
		until InfFlying == false

		if not InfFlying or not IsAlive(LocalPlayer) then
			game.Workspace.Gravity = 0
			LocalPlayer.Character.PrimaryPart.CFrame = SpoofedCamera.CFrame + Vector3.new(0, 10, 0)		

			SetCamera(LocalPlayer.Character)

			SpoofedCamera:Remove()
			task.wait(0.25)

			game.Workspace.Gravity = 196.2
		end
	end
end

task.spawn(function()
	UserInputService.InputBegan:Connect(function(Input)
		if Input.KeyCode == Enum.KeyCode.X then
			InfFly()
		end
	end)
end)

task.spawn(function()
	repeat task.wait() until GetMatchState() ~= 0

	local Cooldown = false

	local LowestPosition = 99999
	local OldLowestPosition = math.huge

	local Blockraycast = RaycastParams.new()

	Blockraycast.FilterType = Enum.RaycastFilterType.Include
	Blockraycast.FilterDescendantsInstances = CollectionServiceBlocks

	local function GetLowestPosition()
		for i, v in next, (CollectionServiceBlocks) do
			local NewRay = game.Workspace:Raycast(v.Position + Vector3.new(0, 800, 0), Vector3.new(0, -1000, 0), Blockraycast)

			if NewRay then
				LowestPosition = NewRay.Position.Y

				if LowestPosition < OldLowestPosition then
					OldLowestPosition = LowestPosition
				end		
			end
		end	
	end

	task.spawn(function()
		local Cooldown = false

		repeat
			task.wait()

			if game.Workspace:FindFirstChild("AntiVoidPart") and Cooldown == false then		
				for i, v in next, (CollectionServiceBlocks) do
					local NewRay = game.Workspace:Raycast(v.Position + Vector3.new(0, 800, 0), Vector3.new(0, -1000, 0), Blockraycast)

					if NewRay then
						LowestPosition = NewRay.Position.Y
						if LowestPosition < OldLowestPosition then
							OldLowestPosition = LowestPosition

							Cooldown = true

							AntiVoidPart.Position = Vector3.new(0, LowestPosition - 4, 0)
						end
					end					
				end
			end
		until not game
	end)

	repeat
		task.wait()

		if Settings.AntiVoid.Value == true then
			if not game.Workspace:FindFirstChild("AntiVoidPart") and Cooldown == false then
				Cooldown = true

				AntiVoidPart = Instance.new("Part")
				AntiVoidPart.Parent = game.Workspace
				AntiVoidPart.Material = Enum.Material.Neon
				AntiVoidPart.Name = "AntiVoidPart"
				AntiVoidPart.Size = Vector3.new(5000, 1, 5000)
				AntiVoidPart.Position = Vector3.new(0, LowestPosition - 4, 0)
				AntiVoidPart.Transparency = Settings.AntiVoid.Transparency
				AntiVoidPart.Color = Color3.new(0.666667, 0, 1)
				AntiVoidPart.CanCollide = false
				AntiVoidPart.Anchored = true

				AntiVoidPart.Touched:Connect(function()
					if IsAlive(LocalPlayer) and game.Workspace:FindFirstChild("AntiVoidPart") and LocalPlayer.Character.HumanoidRootPart.Position.Y <= game.Workspace.AntiVoidPart.Position.Y then
						for i = 1, 3 do
							if IsAlive(LocalPlayer) then
								LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(LocalPlayer.Character.HumanoidRootPart.Velocity.X, 100, LocalPlayer.Character.HumanoidRootPart.Velocity.Z)
							end
						end				
					end
				end)
			end
		end

		if Settings.AntiVoid.Value == false then
			if game.Workspace:FindFirstChild("AntiVoidPart") then
				Cooldown = false				
				AntiVoidPart:Destroy()
			end
		end		
	until not game
end)

task.spawn(function()	
	local function GetServerPosition(Position)
		local X = math.round(Position.X / 3)
		local Y = math.round(Position.Y / 3)
		local Z = math.round(Position.Z / 3)
		return Vector3.new(X, Y, Z)
	end

	if not GetQueueType():find("skywars") then
		repeat	
			task.wait(0.1)

			if GetMatchState() ~= 0 and IsAlive(LocalPlayer) and Settings.Nuker.Value == true then
				local Bed = FindNearestBed()

				if Bed then
					local Magnitude = (LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - Bed.Position).Magnitude

					if Bed and Magnitude < Settings.Nuker.Range then
						local RaycastParameters = RaycastParams.new()
						
						RaycastParameters.FilterType = Enum.RaycastFilterType.Exclude
						RaycastParameters.FilterDescendantsInstances = {LocalPlayer.Character}
						RaycastParameters.IgnoreWater = true

						local RaycastResult = workspace:Raycast(Bed.Position + Vector3.new(0, 30, 0), Vector3.new(0, -35, 0), RaycastParameters)

						if RaycastResult then
							local TargetBlock = nil

							if RaycastResult.Instance then
								TargetBlock = RaycastResult.Instance
							end

							if not RaycastResult.Instance then
								TargetBlock = Bed
							end

							ReplicatedStorage.rbxts_include.node_modules:FindFirstChild("@easy-games"):FindFirstChild("block-engine").node_modules:FindFirstChild("@rbxts").net.out._NetManaged.DamageBlock:InvokeServer({
								["blockRef"] = {
									["blockPosition"] = GetServerPosition(TargetBlock.Position)
								},
								["hitPosition"] = GetServerPosition(TargetBlock.Position),
								["hitNormal"] = GetServerPosition(TargetBlock.Position)
							})
						end
					end
				end
			end
		until not game
	end	
end)

task.spawn(function()
	repeat task.wait(1) until GetMatchState() == 2

	if Settings.PlayAgain.Value == true then
		ReplicatedStorage:FindFirstChild("events-@easy-games/lobby:shared/event/lobby-events@getEvents.Events").joinQueue:FireServer({["queueType"] = GetQueueType()})
	end
end)

task.spawn(function()
	RunService.Heartbeat:Connect(function(Delta)
		if IsAlive(LocalPlayer) and Settings.Speed.Value == true then			
			local SpeedValue = GetSpeed()

			local RaycastParameters = RaycastParams.new()

			local SpeedCFrame = LocalPlayer.Character.Humanoid.MoveDirection * SpeedValue * Delta
			RaycastParameters.FilterDescendantsInstances = {LocalPlayer.Character}

			local Raycast = workspace:Raycast(LocalPlayer.Character.HumanoidRootPart.Position, SpeedCFrame, RaycastParameters)

			if Raycast then
				SpeedCFrame = (Raycast.Position - LocalPlayer.Character.HumanoidRootPart.Position) 
			end

			LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame + SpeedCFrame
		end
	end)
end)

task.spawn(function()	
	local Steal = function()
		for i, v in next, (CollectionService:GetTagged("chest")) do
			if (LocalPlayer.Character.HumanoidRootPart.Position - v.Position).Magnitude <= 30 then
				local Chest = v:FindFirstChild("ChestFolderValue")
				
				Chest = Chest and Chest.Value or nil				
				
				local Chestitems = Chest and Chest:GetChildren()

				if #Chestitems > 1 then
					ReplicatedStorage.rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged:FindFirstChild("Inventory/SetObservedChest"):FireServer("BlockChest")

					for i2, v2 in next, (Chestitems) do
						if v2:IsA("Accessory") then
							task.spawn(function()
								ReplicatedStorage.rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged:FindFirstChild("Inventory/ChestGetItem"):InvokeServer(v.ChestFolderValue.Value, v2)
							end)
						end
					end

					task.wait(0.001)					
					ReplicatedStorage.rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged:FindFirstChild("Inventory/SetObservedChest"):FireServer(nil)
				end
			end
		end
	end	

	repeat
		task.wait(0.5)

		if IsAlive(LocalPlayer) and GetMatchState() ~= 0 and Settings.ChestStealer.Value == true then			
			Steal()
		end
	until not game
end)

task.spawn(function()
	local Messages = {"Boom!", "Bam!", "Bop!", "Pow!"}

	debug.setupvalue(Bedwars.DamageIndicator, 10, {
		Create = function(self, obj, ...)
			task.spawn(function()
				if Settings.Indicators.Value == true then
					local Message = Messages[math.random(#Messages)]

					obj.Parent.Text = Message
					obj.Parent.TextColor3 = Color3.fromHSV(tick() % 10 / 10, 2, 2)

					task.spawn(function()						
						task.wait(0.75)
						
						if Settings.Indicators.Value == true then
							obj.Parent:Destroy()
						end
					end)
				end
			end)
		end
	})
end)

task.spawn(function()
	repeat
		task.wait()

		local NearestPlayer = FindNearestPlayer()
		
		if Settings.Aimbot.Value == true and IsAlive(LocalPlayer) and NearestPlayer then	
			if GetItem("wood_bow") then
				ShootProjectile("wood_bow", "arrow")
			end
			
			if GetItem("wood_crossbow") then
				ShootProjectile("wood_crossbow", "arrow")
			end
			
			if GetItem("tactical_crossbow") then
				ShootProjectile("tactical_crossbow", "arrow")
			end
			
			if GetItem("fireball") then
				ShootProjectile("fireball", "fireball")
			end

			if GetItem("snowball") then
				ShootProjectile("snowball", "snowball")
			end
		end
	until not game
end)

task.spawn(function()	
	UserInputService.JumpRequest:Connect(function()
		if IsAlive(LocalPlayer) and Settings.InfiniteJump.Value == true then
			LocalPlayer.Character.Humanoid:ChangeState("Jumping")
		end
	end)
end)

RunService.RenderStepped:Connect(function()
	local NearestPlayer, NearestPlayerDistance = FindNearestPlayer()

	if NearestPlayer and GetMatchState() ~= 0 and NearestPlayerDistance <= 18 and IsAlive(LocalPlayer) and IsAlive(NearestPlayer) and Settings.AimAssist.Value == true then
		local LookVector = (NearestPlayer.Character.HumanoidRootPart.Position - Camera.CFrame.Position).unit
		
		Camera.CFrame = CFrame.new(Camera.CFrame.Position, Camera.CFrame.Position + LookVector)
	end
end)

local CombatWindow = CreateWindow("Combat")
local BlatantWindow = CreateWindow("Blatant")
local UtilityWindow = CreateWindow("Utility")
local WorldWindow = CreateWindow("World")

task.spawn(function()
	local KillAura, DropDownButton, LayoutOrder = CreateToggle(CombatWindow, "Killaura", Settings.KillAura.Value, function(CallBack)
		Settings.KillAura.Value = CallBack
	end)

	local CustomAnimationsValue = false
	local RangeValue = false

	local CustomAnimations
	local Range

	DropDownButton.Activated:Connect(function()			
		if CustomAnimationsValue == false then
			CustomAnimations = CreateMiniToggle(CombatWindow, "CustomAnimations", Settings.KillAura.CustomAnimation, LayoutOrder + 1, function(Callback)
				Settings.KillAura.CustomAnimation = Callback
			end)
		end

		if RangeValue == false then
			Range = CreateSlider(CombatWindow, "Range", Settings.KillAura.Range, 20, 0, LayoutOrder + 2, function(Callback)
				Settings.KillAura.Range = Callback
			end)
		end

		if CustomAnimationsValue == true then					
			CustomAnimations:Destroy()
		end

		if RangeValue == true then					
			Range:Destroy()
		end

		CustomAnimationsValue = not CustomAnimationsValue
		RangeValue = not RangeValue
	end)
end)

task.spawn(function()
	local Velocity = CreateToggle(CombatWindow, "Velocity", Settings.Velocity.Value, function(CallBack)
		Settings.Velocity.Value = CallBack

		if CallBack == true then
			Bedwars.KnockbackTable.kbDirectionStrength = 0
			Bedwars.KnockbackTable.kbUpwardStrength = 0	
		end

		if CallBack == false then
			Bedwars.KnockbackTable.kbDirectionStrength = 100
			Bedwars.KnockbackTable.kbUpwardStrength = 100	
		end
	end)
end)

task.spawn(function()
	local Sprint = CreateToggle(CombatWindow, "Sprint", Settings.Sprint.Value, function(CallBack)
		Settings.Sprint.Value = CallBack

		local OldSprintFunction

		if CallBack == true then

			OldSprintFunction = Bedwars.SprintController.stopSprinting

			Bedwars.SprintController.stopSprinting = function(...)
				local Call = OldSprintFunction(...)

				Bedwars.SprintController:startSprinting()
				
				return Call
			end

			task.spawn(function()
				Bedwars.SprintController:startSprinting()
			end)

			LocalPlayer.CharacterAdded:Connect(function(Character)
				Bedwars.SprintController:stopSprinting()
			end)
		end

		if CallBack == false then
			Bedwars.SprintController.stopSprinting = OldSprintFunction
			Bedwars.SprintController:stopSprinting()
		end

		Bedwars.SprintController:setSpeed(20)
	end)
end)

task.spawn(function()
	local Reach = CreateToggle(CombatWindow, "Reach", Settings.Reach.Value, function(CallBack)
		Settings.Reach.Value = CallBack

		local OldReach = Bedwars.CombatConstant.RAYCAST_SWORD_CHARACTER_DISTANCE

		if CallBack == true then
			Bedwars.CombatConstant.RAYCAST_SWORD_CHARACTER_DISTANCE = 20
		end

		if CallBack == false then
			Bedwars.CombatConstant.RAYCAST_SWORD_CHARACTER_DISTANCE = OldReach
		end
	end)
end)

task.spawn(function()
	local ChestStealer = CreateToggle(BlatantWindow, "ChestSteal", Settings.ChestStealer.Value, function(CallBack)
		Settings.ChestStealer.Value = CallBack
	end)
end)

task.spawn(function()
	local Aimbot, DropDownButton, LayoutOrder = CreateToggle(BlatantWindow, "Aimbot", Settings.Aimbot.Value, function(CallBack)
		Settings.Aimbot.Value = CallBack
	end)
end)

task.spawn(function()
	local NoFall = CreateToggle(BlatantWindow, "NoFall", Settings.NoFall.Value, function(CallBack)
		Settings.NoFall.Value = CallBack
	end)
end)

task.spawn(function()
	local Speed, DropDownButton, LayoutOrder = CreateToggle(BlatantWindow, "Speed", Settings.Speed.Value, function(CallBack)
		Settings.Speed.Value = CallBack
	end)

	local SpeedSlider
	
	local SpeedValue = false

	DropDownButton.Activated:Connect(function()			
		if SpeedValue == false then
			SpeedSlider = CreateSlider(BlatantWindow, "Speed", Settings.Speed.Speed, 23, 0, LayoutOrder + 1, function(Callback)
				Settings.Speed.Speed = Callback
			end)
		end

		if SpeedValue == true then					
			SpeedSlider:Destroy()
		end

		SpeedValue = not SpeedValue
	end)	
end)

task.spawn(function()
	local FpsBooster = CreateToggle(UtilityWindow, "FpsBoost", Settings.FpsBooster.Value, function(CallBack)
		Settings.FpsBooster.Value = CallBack

		if CallBack == true then
			FpsBoostTextures()
		end
	end)
end)

task.spawn(function()
	local AimAssist, DropDownButton, LayoutOrder = CreateToggle(UtilityWindow, "AimAssist", Settings.AimAssist.Value, function(CallBack)
		Settings.AimAssist.Value = CallBack
	end)
end)

task.spawn(function()
	local PlayAgain = CreateToggle(UtilityWindow, "PlayAgain", Settings.PlayAgain.Value, function(CallBack)
		Settings.PlayAgain.Value = CallBack
	end)
end)

task.spawn(function()
	local InfJump = CreateToggle(UtilityWindow, "InfJump", Settings.InfiniteJump.Value, function(CallBack)
		Settings.InfiniteJump.Value = CallBack
	end)
end)

task.spawn(function()
	local Esp = CreateToggle(UtilityWindow, "Esp", Settings.Esp.Value, function(CallBack)
		Settings.Esp.Value = CallBack
		
		if CallBack == true then
			task.spawn(function()
				for i, v in next, Players do
					if IsAlive(v) and v.Team ~= LocalPlayer.Team and v ~= LocalPlayer and CallBack == true and not v.Character:FindFirstChild("Esp") then
						local Esp = Instance.new("Highlight")

						Esp.Parent = v.Character
						Esp.Name = "Esp"
						Esp.FillColor = Color3.new(0.666667, 0.333333, 1)
						Esp.FillTransparency = 0.5
						Esp.OutlineColor = Color3.new(0.666667, 0, 1)
						Esp.OutlineTransparency = 0
					end
					
					v.CharacterAdded:Connect(function(Character)
						if Settings.Esp.Value == true and v.Team ~= LocalPlayer.Team and not Character:FindFirstChild("Esp") then
							local Esp = Instance.new("Highlight")

							Esp.Parent = v.Character
							Esp.Name = "Esp"
							Esp.FillColor = Color3.new(0.666667, 0.333333, 1)
							Esp.FillTransparency = 0.5
							Esp.OutlineColor = Color3.new(1, 1, 1)
							Esp.OutlineTransparency = 0
						end
					end)
				end
			end)
		end
		
		if CallBack == false then
			task.spawn(function()
				for i, v in next, Players do
					if IsAlive(v) and CallBack == false and v.Character:FindFirstChild("Esp") then
						v.Character:FindFirstChild("Esp"):Destroy()
					end
				end
			end)
		end
	end)
end)

task.spawn(function()
	local GalaxySky = CreateToggle(WorldWindow, "GalaxySky", Settings.GalaxySky.Value, function(CallBack)
		Settings.GalaxySky.Value = CallBack

		if CallBack == true then
			if LightingService:FindFirstChild("Sky") and Settings.GalaxySky.Value == true then
				LightingService.Sky.Parent = ReplicatedStorage

				local Sky = Instance.new("Sky")
				local ID = 8281961896

				Sky.SkyboxBk = "http://www.roblox.com/asset/?id=" .. ID
				Sky.SkyboxDn = "http://www.roblox.com/asset/?id=" .. ID
				Sky.SkyboxFt = "http://www.roblox.com/asset/?id=" .. ID
				Sky.SkyboxLf = "http://www.roblox.com/asset/?id=" .. ID
				Sky.SkyboxRt = "http://www.roblox.com/asset/?id=" .. ID
				Sky.SkyboxUp = "http://www.roblox.com/asset/?id=" .. ID

				Sky.Parent = LightingService
			end
		end

		if CallBack == false then
			if ReplicatedStorage:FindFirstChild("Sky") and LightingService:FindFirstChild("Sky") and Settings.GalaxySky.Value == false then
				LightingService.Sky:Destroy()

				ReplicatedStorage.Sky.Parent = LightingService 
			end
		end
	end)
end)

task.spawn(function()
	local Indicators = CreateToggle(WorldWindow, "Indicators", Settings.Indicators.Value, function(CallBack)
		Settings.Indicators.Value = CallBack
	end)
end)

task.spawn(function()
	local AntiVoid, DropDownButton, LayoutOrder = CreateToggle(WorldWindow, "AntiVoid", Settings.AntiVoid.Value, function(CallBack)
		Settings.AntiVoid.Value = CallBack
	end)
end)

task.spawn(function()
	if not GetQueueType():find("skywars") then
		local Nuker, DropDownButton, LayoutOrder = CreateToggle(WorldWindow, "Nuker", Settings.Nuker.Value, function(CallBack)
			Settings.Nuker.Value = CallBack
		end)
		
		local RangeValue = false

		local Range

		DropDownButton.Activated:Connect(function()			
			if RangeValue == false then
				Range = CreateSlider(WorldWindow, "Range", Settings.Nuker.Range, 30, 0, LayoutOrder + 1, function(Callback)
					Settings.Nuker.Range = Callback
				end)
			end

			if RangeValue == true then					
				Range:Destroy()
			end

			RangeValue = not RangeValue
		end)	
	end			
end)

task.spawn(function()
	local Cape = CreateToggle(WorldWindow, "Cape", Settings.Cape.Value, function(CallBack)
		Settings.Cape.Value = CallBack

		local DecalId = "rbxassetid://14347677597"

		local function CreateCape()
			local Cape = Instance.new("Part")

			Cape.Parent = LocalPlayer.Character
			Cape.Name = "Cape"
			Cape.Size = Vector3.new(0.2, 0.2, 0.08)
			Cape.Material = Enum.Material.SmoothPlastic
			Cape.Color = Color3.new(0.105882, 0.105882, 0.105882)
			Cape.CanCollide = false

			local BlockMesh = Instance.new("BlockMesh")

			BlockMesh.Parent = Cape
			BlockMesh.Name = "Mesh"
			BlockMesh.Scale = Vector3.new(9, 17.5, 0.5)
			BlockMesh.VertexColor = Vector3.new(1, 1, 1)

			local Motor = Instance.new("Motor")

			Motor.Parent = Cape
			Motor.Name = "Motor"
			Motor.C0 = CFrame.new(0, 2, 0, -4.37113883e-08, 0, 1, 0, 1, 0, -1, 0, -4.37113883e-08)
			Motor.C1 = CFrame.new(0, 1, 0.449999988, -4.37113883e-08, 0, 1, 0, 1, 0, -1, 0, -4.37113883e-08)
			Motor.Part1 = LocalPlayer.Character.UpperTorso
			Motor.Part0 = Cape
			Motor.CurrentAngle = -0.16208772361278534
			Motor.DesiredAngle = -0.1002269834280014

			local Decal = Instance.new("Decal")

			Decal.Parent = Cape
			Decal.Name = "Decal"
			Decal.Face = Enum.NormalId.Back
			Decal.Texture = DecalId
		end

		if CallBack == true then
			CreateCape()
		end

		if CallBack == false then
			if IsAlive(LocalPlayer) and LocalPlayer.Character:FindFirstChild("Cape") then
				LocalPlayer.Character:FindFirstChild("Cape"):Destroy()
			end
		end

		task.spawn(function()
			LocalPlayer.CharacterAdded:Connect(function()
				if IsAlive(LocalPlayer) and not LocalPlayer.Character:FindFirstChild("Cape") and CallBack == true then
					task.wait(0.3)

					CreateCape()
				end
			end)
		end)

		task.spawn(function()
			repeat
				task.wait()

				if IsAlive(LocalPlayer) and IsMoving() and LocalPlayer.Character:FindFirstChild("Cape") and LocalPlayer.Character:FindFirstChild("Cape"):FindFirstChild("Motor") then
					local TweenInformation = TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
					local CapeTween = TweenService:Create(LocalPlayer.Character:FindFirstChild("Cape"):FindFirstChild("Motor"), TweenInformation, {CurrentAngle = -0.6})

					CapeTween:Play()
				end

				if IsAlive(LocalPlayer) and not IsMoving() and LocalPlayer.Character:FindFirstChild("Cape") and LocalPlayer.Character:FindFirstChild("Cape"):FindFirstChild("Motor") then
					local TweenInformation = TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
					local CapeTween = TweenService:Create(LocalPlayer.Character:FindFirstChild("Cape"):FindFirstChild("Motor"), TweenInformation, {CurrentAngle = -0.2})

					CapeTween:Play()
				end
			until not game
		end)
	end)
end)

setfpscap(10000)

task.spawn(function()
	local ViewModel = Camera:FindFirstChild("Viewmodel")
	local C1

	local Depth = {Value = 35} 
	local Horizontal = {Value = 15}
	local Vertical = {Value = 5}

	local RotationZ = {Value = 5}

	LocalPlayer.PlayerScripts.TS.controllers.global.viewmodel["viewmodel-controller"]:SetAttribute("ConstantManager_DEPTH_OFFSET", -(Depth.Value / 10))
	LocalPlayer.PlayerScripts.TS.controllers.global.viewmodel["viewmodel-controller"]:SetAttribute("ConstantManager_HORIZONTAL_OFFSET", (Horizontal.Value / 10))
	LocalPlayer.PlayerScripts.TS.controllers.global.viewmodel["viewmodel-controller"]:SetAttribute("ConstantManager_VERTICAL_OFFSET", (Vertical.Value / 10))

	C1 = ViewModel.RightHand.RightWrist.C1

	ViewModel.RightHand.RightWrist.C1 = C1 * CFrame.Angles(math.rad(0), math.rad(0), math.rad(RotationZ.Value))
end)

task.spawn(function()
	repeat 
		task.wait(1)

		Players = game.Players:GetPlayers()
	until not game
end)
