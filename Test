local Owner = "GODCLUTCHERONTOP19"

local LocalPlayer = game:GetService("Players").LocalPlayer
local Camera = game:GetService("Workspace").CurrentCamera
local KnitClient = debug.getupvalue(require(LocalPlayer.PlayerScripts.TS.knit).setup, 6)
local Client = require(game:GetService("ReplicatedStorage").TS.remotes).default.Client

local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local StatisticsService = game:GetService("Stats")
local TweenService = game:GetService("TweenService")
local LightingService = game:GetService("Lighting")
local TextChatService = game:GetService("TextChatService")
local UserInputService = game:GetService("UserInputService")
local CollectionService = game:GetService("CollectionService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local AlSploit = Instance.new("ScreenGui")
local NotificationContainer = Instance.new("Frame")
local UIListLayout = Instance.new("UIListLayout")
local NotificationBackground = Instance.new("ImageLabel")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local Text = Instance.new("TextLabel")
local Title = Instance.new("TextLabel")

local ColorValue1 = 0.145098
local ColorValue2 = 0.439216
local ColorValue3 =	0.882353

local Rgb = true

AlSploit.Parent = game.Players.LocalPlayer.PlayerGui
AlSploit.Name = "AlSploit"
AlSploit.ResetOnSpawn = false

local Blur = Instance.new("BlurEffect")
Blur.Size = 16
Blur.Parent = LightingService
Blur.Enabled = false

local TextLabel11 = Instance.new("TextLabel")

TextLabel11.Parent = AlSploit
TextLabel11.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel11.BackgroundTransparency = 1.000
TextLabel11.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel11.BorderSizePixel = 0
TextLabel11.Position = UDim2.new(0.869084895, 0, 0, 0)
TextLabel11.Size = UDim2.new(0, 200, 0, 50)
TextLabel11.Font = Enum.Font.FredokaOne
TextLabel11.Text = "AlSploit"
TextLabel11.Name = "AlSploitWatermark"
TextLabel11.ZIndex = 0
TextLabel11.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel11.TextScaled = true
TextLabel11.TextSize = 14.000
TextLabel11.TextStrokeColor3 = Color3.fromRGB(28, 28, 28)
TextLabel11.TextWrapped = true
TextLabel11.TextStrokeTransparency = 1

task.spawn(function()
	while task.wait(0.5) and AlSploit:FindFirstChild("AlSploitWatermark") do

		if Rgb == true then
			AlSploit:FindFirstChild("AlSploitWatermark").TextColor3 = Color3.fromHSV(tick() % 5 / 5, 1, 1)
		end

		if Rgb == false then
			AlSploit:FindFirstChild("AlSploitWatermark").TextColor3 = Color3.new(ColorValue1, ColorValue2, ColorValue3)
		end
	end
end)

task.spawn(function()
	while task.wait(0.5) do		
		if not AlSploit:FindFirstChild("AlSploitWatermark") then
			local TextLabel11 = Instance.new("TextLabel")

			TextLabel11.Parent = AlSploit
			TextLabel11.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			TextLabel11.BackgroundTransparency = 1.000
			TextLabel11.BorderColor3 = Color3.fromRGB(0, 0, 0)
			TextLabel11.BorderSizePixel = 0
			TextLabel11.Position = UDim2.new(0.869084895, 0, 0, 0)
			TextLabel11.Size = UDim2.new(0, 200, 0, 50)
			TextLabel11.Font = Enum.Font.FredokaOne
			TextLabel11.Text = "AlSploit"
			TextLabel11.Name = "AlSploitWatermark"
			TextLabel11.TextColor3 = Color3.fromRGB(255, 255, 255)
			TextLabel11.TextScaled = true
			TextLabel11.TextSize = 14.000
			TextLabel11.TextStrokeColor3 = Color3.fromRGB(28, 28, 28)
			TextLabel11.TextWrapped = true
		end		
	end
end)

NotificationContainer.Name = "NotificationContainer"
NotificationContainer.Parent = AlSploit
NotificationContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
NotificationContainer.BackgroundTransparency = 1.000
NotificationContainer.BorderColor3 = Color3.fromRGB(0, 0, 0)
NotificationContainer.BorderSizePixel = 0
NotificationContainer.Position = UDim2.new(0.787610292, 0, 0, 0)
NotificationContainer.Size = UDim2.new(0, 261, 1, 0)

UIListLayout.Parent = NotificationContainer
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
UIListLayout.Padding = UDim.new(0, -80)

NotificationBackground.Name = "NotificationBackground"
NotificationBackground.Parent = NotificationContainer
NotificationBackground.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
NotificationBackground.BackgroundTransparency = 1.000
NotificationBackground.BorderColor3 = Color3.fromRGB(0, 0, 0)
NotificationBackground.BorderSizePixel = 0
NotificationBackground.Position = UDim2.new(-0.333333313, 0, 0.0480167009, 0)
NotificationBackground.Size = UDim2.new(0, 420, 0, 187)
NotificationBackground.Visible = false
NotificationBackground.Image = "rbxassetid://13952277826"

ImageLabel.Parent = NotificationBackground
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.Position = UDim2.new(0.12073876, 0, 0.160796613, 0)
ImageLabel.Size = UDim2.new(0, 100, 0, 100)
ImageLabel.Image = "rbxassetid://13952260782"

UICorner.Parent = ImageLabel

Text.Name = "Text"
Text.Parent = NotificationBackground
Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Text.BackgroundTransparency = 1.000
Text.BorderColor3 = Color3.fromRGB(0, 0, 0)
Text.BorderSizePixel = 0
Text.Position = UDim2.new(0.190908521, 0, 0.534304857, 0)
Text.Size = UDim2.new(0, 282, 0, 22)
Text.Font = Enum.Font.FredokaOne
Text.Text = "Text"
Text.TextColor3 = Color3.fromRGB(183, 182, 182)
Text.TextScaled = true
Text.TextSize = 14.000
Text.TextWrapped = true

Title.Name = "Title"
Title.Parent = NotificationBackground
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
Title.BorderSizePixel = 0
Title.Position = UDim2.new(0.190908447, 0, 0.35783422, 0)
Title.Size = UDim2.new(0, 292, 0, 25)
Title.Font = Enum.Font.FredokaOne
Title.Text = "Notification"
Title.TextColor3 = Color3.fromRGB(183, 182, 182)
Title.TextScaled = true
Title.TextSize = 14.000
Title.TextStrokeTransparency = 0.000
Title.TextWrapped = true

local ContainerFrame = Instance.new("Frame")
local UIListLayout = Instance.new("UIListLayout")

ContainerFrame.Name = "ContainerFrame"
ContainerFrame.Parent = AlSploit
ContainerFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ContainerFrame.BackgroundTransparency = 1.000
ContainerFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
ContainerFrame.BorderSizePixel = 0
ContainerFrame.Position = UDim2.new(0, 0, 0.0287356321, 0)
ContainerFrame.Size = UDim2.new(1, 0, 1, 0)
ContainerFrame.Visible = false

UIListLayout.Parent = ContainerFrame
UIListLayout.FillDirection = Enum.FillDirection.Horizontal
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 80)

UserInputService.InputBegan:Connect(function(Input)
	if Input.KeyCode == Enum.KeyCode.M then
		ContainerFrame.Visible = not ContainerFrame.Visible	

		Blur.Enabled = not Blur.Enabled
	end
end)

if UserInputService.KeyboardEnabled == false then
	local GuiButton = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local Title = Instance.new("TextLabel")
	local TextButton = Instance.new("TextButton")
	local UICorner_2 = Instance.new("UICorner")
	local UIStroke = Instance.new("UIStroke")

	GuiButton.Name = "GuiButton"
	GuiButton.Parent = AlSploit
	GuiButton.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
	GuiButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
	GuiButton.BorderSizePixel = 0
	GuiButton.Position = UDim2.new(0.869444668, 0, 0.664762974, 0)
	GuiButton.Size = UDim2.new(0.0651720539, 0, 0.1303441078, 0)

	UICorner.CornerRadius = UDim.new(0, 15)
	UICorner.Parent = GuiButton

	Title.Name = "Title"
	Title.Parent = GuiButton
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Title.BorderSizePixel = 0
	Title.Position = UDim2.new(0.187768549, 0, 0.188587949, 0)
	Title.Size = UDim2.new(0.622323155, 0, 0.614121556, 0)
	Title.Font = Enum.Font.FredokaOne
	Title.Text = "Gui"
	Title.TextColor3 = Color3.fromRGB(228, 228, 228)
	Title.TextScaled = true
	Title.TextSize = 14.000
	Title.TextWrapped = true

	TextButton.Parent = GuiButton
	TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextButton.BackgroundTransparency = 1.000
	TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextButton.BorderSizePixel = 0
	TextButton.Size = UDim2.new(1.00000036, 0, 1.00000012, 0)
	TextButton.Font = Enum.Font.SourceSans
	TextButton.Text = ""
	TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
	TextButton.TextSize = 14.000

	UICorner_2.CornerRadius = UDim.new(1, 0)
	UICorner_2.Parent = TextButton

	UIStroke.Parent = GuiButton
	UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke.Color = Color3.new(ColorValue1, ColorValue2, ColorValue3)

	task.spawn(function()
		while task.wait(0.001) do
			if Rgb == true then
				UIStroke.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
			end

			if Rgb == false then
				UIStroke.Color = Color3.new(ColorValue1, ColorValue2, ColorValue3) 
			end
		end
	end)

	UIStroke.LineJoinMode = Enum.LineJoinMode.Round
	UIStroke.Thickness = 3
	UIStroke.Transparency = 0

	TextButton.Activated:Connect(function()
		ContainerFrame.Visible = not ContainerFrame.Visible
	end)
end

function CreateWindow(Name)
	local Dropdown = Instance.new("Frame")
	local DropdownButton = Instance.new("ImageButton")
	local Ghost = Instance.new("TextButton")
	local Frame = Instance.new("Frame")
	local Title = Instance.new("TextLabel")
	local UICorner_2 = Instance.new("UICorner")
	local UIStroke = Instance.new("UIStroke")
	local UICorner = Instance.new("UICorner")
	local UIListLayout = Instance.new("UIListLayout")

	Frame.Name = Name .. "Frame"
	Frame.Parent = ContainerFrame
	Frame.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
	Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame.BorderSizePixel = 0
	Frame.Position = UDim2.new(0.0720998049, 0, 0.0554187186, 0)
	Frame.Size = UDim2.new(0, 200, 0, 35)
	Frame.ZIndex = 3

	UICorner_2.CornerRadius = UDim.new(0, 5)
	UICorner_2.Parent = Frame

	UIStroke.Parent = Frame
	UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke.Color = Color3.new(ColorValue1, ColorValue2, ColorValue3)

	task.spawn(function()
		while task.wait(0.001) do
			if Rgb == true then
				UIStroke.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
			end

			if Rgb == false then
				UIStroke.Color = Color3.new(ColorValue1, ColorValue2, ColorValue3) 
			end
		end
	end)

	UIStroke.LineJoinMode = Enum.LineJoinMode.Round
	UIStroke.Thickness = 3
	UIStroke.Transparency = 0

	Dropdown.Name = "Dropdown"
	Dropdown.Parent = Frame
	Dropdown.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
	Dropdown.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Dropdown.BorderSizePixel = 0
	Dropdown.Position = UDim2.new(0, 0, -0.100000001, 0)
	Dropdown.Size = UDim2.new(0, 200, 0, 650)
	Dropdown.ZIndex = 2

	Title.Name = "Title"
	Title.Parent = Frame
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Title.BorderSizePixel = 0
	Title.Position = UDim2.new(0, 0, -0.00500008697, 0)
	Title.Size = UDim2.new(0.8, 0, 0, 35)
	Title.Font = Enum.Font.FredokaOne
	Title.Text = Name
	Title.TextColor3 = Color3.fromRGB(228, 228, 228)
	Title.ZIndex = 3

	task.spawn(function()
		while task.wait(0.001) do
			if Rgb == true then
				Title.TextColor3 = Color3.fromHSV(tick() % 5 / 5, 1, 1)
			end

			if Rgb == false then
				Title.TextColor3 = Color3.new(ColorValue1, ColorValue2, ColorValue3) 
			end
		end
	end)

	Title.TextSize = 30
	Title.TextWrapped = true

	DropdownButton.Name = "DropdownButton"
	DropdownButton.Parent = Frame
	DropdownButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	DropdownButton.BackgroundTransparency = 1.000
	DropdownButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
	DropdownButton.BorderSizePixel = 0
	DropdownButton.Position = UDim2.new(0.75, 0, 0.0450000204, 0)
	DropdownButton.Size = UDim2.new(0, 30, 0, 30)
	DropdownButton.Image = "http://www.roblox.com/asset/?id=12072054746"
	DropdownButton.ZIndex = 3

	UICorner.CornerRadius = UDim.new(0, 5)
	UICorner.Parent = Dropdown

	Ghost.Name = "Ghost"
	Ghost.Parent = Dropdown
	Ghost.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Ghost.BackgroundTransparency = 1.000
	Ghost.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Ghost.BorderSizePixel = 0
	Ghost.Position = UDim2.new(0, 0, 0.441176474, 0)
	Ghost.Size = UDim2.new(0, 120, 0, 50)
	Ghost.Font = Enum.Font.FredokaOne
	Ghost.Text = ""
	Ghost.TextColor3 = Color3.fromRGB(228, 228, 228)
	Ghost.TextSize = 25.000
	Ghost.LayoutOrder = 1

	UIListLayout.Parent = Dropdown
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
	UIListLayout.Padding = UDim.new(0, 23)

	UIStroke.Parent = Dropdown
	UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke.Color = Color3.new(ColorValue1, ColorValue2, ColorValue3)

	task.spawn(function()
		while task.wait(0.001) do
			if Rgb == true then
				UIStroke.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
			end

			if Rgb == false then
				UIStroke.Color = Color3.new(ColorValue1, ColorValue2, ColorValue3) 
			end
		end
	end)

	UIStroke.LineJoinMode = Enum.LineJoinMode.Round
	UIStroke.Thickness = 3
	UIStroke.Transparency = 0

	local OldSize = UDim2.new(0, 200, 0, 650)

	DropdownButton.Activated:Connect(function()
		if Dropdown.Visible == true then
			local TweenInformation = TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)	
			local Tween = TweenService:Create(Dropdown, TweenInformation, {Size = UDim2.new(0, 0, 0, 0)})	
			Tween:Play()

			Tween.Completed:Connect(function()
				Dropdown.Visible = not Dropdown.Visible
			end)
		end

		if Dropdown.Visible == false then
			Dropdown.Visible  = not Dropdown.Visible

			local TweenInformation = TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0, false, 0)
			local Tween = TweenService:Create(Dropdown, TweenInformation, {Size = OldSize})	
			Tween:Play()				
		end
	end)
	return Dropdown
end

function CreateToggle(Parent, Name, DefaultValue, Callback)

	Callback = Callback or function () end

	local Button = Instance.new("TextButton")
	local Dropdown1 = nil

	Button.Name = "Button"
	Button.Parent = Parent
	Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Button.BackgroundTransparency = 1.000
	Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Button.BorderSizePixel = 0
	Button.LayoutOrder = 1
	Button.Position = UDim2.new(0, 0, 0.441176474, 0)
	Button.Size = UDim2.new(0, 120, 0, 35)
	Button.Font = Enum.Font.FredokaOne
	Button.Text = Name
	Button.TextColor3 = Color3.fromRGB(228, 228, 228)
	Button.TextSize = 25.000
	Button.LayoutOrder = 2
	Button.ZIndex = 3

	local Checker = {["Enabled"] = false}
	function Checker:Toggle(Bool)
		Bool = Bool or (not Checker["Enabled"])
		Checker["Enabled"] = Bool

		if not Bool then
			spawn(function()
				Callback(false)
				Button.TextColor3 = Color3.new(0.894118, 0.894118, 0.894118)
			end)
		else
			spawn(function()
				Callback(true)
				Button.TextColor3 = Color3.new(ColorValue1, ColorValue2, ColorValue3)
			end)
		end
	end

	if DefaultValue == true then
		Checker:Toggle()
	end

	task.spawn(function()
		Button.Activated:Connect(function()
			Checker:Toggle()	

			if Button.TextColor3 == Color3.new(0.894118, 0.894118, 0.894118) then
				Button.TextColor3 = Color3.new(ColorValue1, ColorValue2, ColorValue3)
			end

			if Button.TextColor3 == Color3.new(ColorValue1, ColorValue2, ColorValue3) then 
				Color3.new(0.894118, 0.894118, 0.894118)
			end			
		end)
	end)	

	local Dropdown = Instance.new("Frame")
	local DropDownButton = Instance.new("ImageButton")
	local UIStroke = Instance.new("UIStroke")

	UIStroke.Parent = Dropdown
	UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke.Color = Color3.new(ColorValue1, ColorValue2, ColorValue3)	

	task.spawn(function()
		while task.wait(0.01) do
			if Rgb == true then
				UIStroke.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
			end

			if Rgb == false then
				UIStroke.Color = Color3.new(ColorValue1, ColorValue2, ColorValue3) 
			end
		end
	end)

	UIStroke.LineJoinMode = Enum.LineJoinMode.Round
	UIStroke.Thickness = 3
	UIStroke.Transparency = 0

	Dropdown.Name = "Dropdown"
	Dropdown.Parent = Button
	Dropdown.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
	Dropdown.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Dropdown.BorderSizePixel = 0
	Dropdown.Position = UDim2.new(0, 0, 1.20000005, 0)
	Dropdown.Size = UDim2.new(0, 0, 0, 0)
	Dropdown.Visible = false
	Dropdown.ZIndex = 4

	DropDownButton.Name = "DropDownButton"
	DropDownButton.Parent = Button
	DropDownButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	DropDownButton.BackgroundTransparency = 1.000
	DropDownButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
	DropDownButton.BorderSizePixel = 0
	DropDownButton.Position = UDim2.new(1.26666665, 0, 0.239999995, 0)
	DropDownButton.Size = UDim2.new(0, 25, 0, 25)
	DropDownButton.Image = "rbxassetid://14480844229"
	DropDownButton.ImageColor3 = Color3.fromRGB(228, 228, 228)
	DropDownButton.ZIndex = 3

	local OldSize = UDim2.new(0, 200, 0, 300)
	local UICorner = Instance.new("UICorner")
	local UIListLayout = Instance.new("UIListLayout")

	UICorner.CornerRadius = UDim.new(0, 5)
	UICorner.Parent = Dropdown

	UIListLayout.Parent = Dropdown
	UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

	Dropdown1 = Dropdown

	DropDownButton.Activated:Connect(function()
		if Dropdown.Visible == true then
			local TweenInformation = TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)	
			local Tween = TweenService:Create(Dropdown, TweenInformation, {Size = UDim2.new(0, 0, 0, 0)})	
			Tween:Play()

			Tween.Completed:Connect(function()
				Dropdown.Visible = not Dropdown.Visible
			end)
		end

		if Dropdown.Visible == false then
			Dropdown.Visible  = not Dropdown.Visible

			local TweenInformation = TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0, false, 0)
			local Tween = TweenService:Create(Dropdown, TweenInformation, {Size = OldSize})	
			Tween:Play()				
		end
	end)
	return Dropdown1
end

function Snap(Number,Factor)
	if Factor == 0 then
		return Number
	else
		return math.floor(Number / Factor + 0.5) * Factor
	end
end

function CreateMinitoggle(Parent, Name, DefaultValue, Callback)
	if Parent then
		Callback = Callback or function () end

		local Toggle = Instance.new("TextButton")
		local UICorner_2 = Instance.new("UICorner")
		local UICorner = Instance.new("UICorner")

		local MiniChecker = {["Enabled"] = false}

		function MiniChecker:Toggle(Bool)
			Bool = Bool or (not MiniChecker["Enabled"])
			MiniChecker["Enabled"] = Bool
			if not Bool then
				spawn(function()
					Callback(false)
					Toggle.TextColor3 = Color3.new(0.894118, 0.894118, 0.894118)
				end)
			else
				spawn(function()
					Callback(true)
					Toggle.TextColor3 = Color3.new(ColorValue1, ColorValue2, ColorValue3)
				end)
			end
		end

		MiniChecker:Toggle(DefaultValue)

		Toggle.Activated:Connect(function()
			MiniChecker:Toggle()
		end)

		Toggle.Name = "Toggle"
		Toggle.Parent = Parent
		Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Toggle.BackgroundTransparency = 1.000
		Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Toggle.BorderSizePixel = 0
		Toggle.Size = UDim2.new(0, 120, 0, 50)
		Toggle.Font = Enum.Font.FredokaOne
		Toggle.Text = Name
		Toggle.TextColor3 = Color3.fromRGB(228, 228, 228)
		Toggle.TextSize = 23.000
		Toggle.ZIndex = 5

		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Parent = Toggle

		MiniChecker:Toggle(DefaultValue)
	end
end

local function DumpRemote(Tab)
	for i, v in pairs(Tab) do
		if v == "Client" then
			return Tab[i + 1]
		end
	end
	return ""
end

local LocalPlayerGui = LocalPlayer.PlayerGui

local Notification = NotificationBackground
local Container = NotificationContainer

local OldSize = Notification.Size

local Bedwars = {
	["KnockbackTable"] = debug.getupvalue(require(game:GetService("ReplicatedStorage").TS.damage["knockback-util"]).KnockbackUtil.calculateKnockbackVelocity, 1),
	["CombatConstant"] = require(game:GetService("ReplicatedStorage").TS.combat["combat-constant"]).CombatConstant,
	["SprintController"] = KnitClient.Controllers.SprintController,
	["ShopItems"] = debug.getupvalue(require(game:GetService("ReplicatedStorage").TS.games.bedwars.shop["bedwars-shop"]).BedwarsShop.getShopItem, 2),
	["DamageTypes"] = require(game:GetService("ReplicatedStorage").TS.damage["damage-type"]).DamageType,
	["PingController"] = require(LocalPlayer.PlayerScripts.TS.controllers.game.ping["ping-controller"]).PingController,
	["ClientHandlerStore"] = require(LocalPlayer.PlayerScripts.TS.ui.store).ClientStore,
	["DamageIndicator"] = KnitClient.Controllers.DamageIndicatorController.spawnDamageIndicator,
	["BlockCPSConstants"] = require(game:GetService("ReplicatedStorage").TS["shared-constants"]).CpsConstants,
	["SwordController"] = KnitClient.Controllers.SwordController,
	["BlockController"] = require(ReplicatedStorage["rbxts_include"]["node_modules"]["@easy-games"]["block-engine"].out).BlockEngine,
	["PickupRemote"] = DumpRemote(debug.getconstants(KnitClient.Controllers.ItemDropController.checkForPickup)),
	["AttackRemote"] = DumpRemote(debug.getconstants(KnitClient.Controllers.SwordController.sendServerRequest)),	
}

local Client = require(game:GetService("ReplicatedStorage").TS.remotes).default.Client

local CollectionServiceBlocks = CollectionService:GetTagged("block")

local AntiVoidPart = nil
local AcDisabled = false
local KillauraAc = false
local Jumping = false

local WhitelistedTable = {"GODCLUTCHERONTOP15"}
local HWID = game:GetService("RbxAnalyticsService"):GetClientId()

local BlacklistedTable = {

}

local LocalPlayer = game.Players.LocalPlayer

local HttpService = game:GetService("HttpService")

for i, v in pairs(BlacklistedTable) do
	if HWID == v or LocalPlayer.Name == v then
		v:Kick("Blacklisted")
	end
end

local CachedNormalSides = {}
local BlacklistedBlocks = {
	bed = true,
	ceramic = true
}

for i, v in pairs(Enum.NormalId:GetEnumItems()) do 
	if v.Name ~= "Bottom" then 
		table.insert(CachedNormalSides, v) 
	end 
end

local SaveFileName = "AlSploitUpdateRewriteV4.lua"

function DeleteUnwantedFiles()
	for i = 1, 1000 do
		if isfile("AlSploit/" .. "AlSploitUpdateRewriteV" .. i .. ".lua") and not SaveFileName:find(i) then
			deletefile("AlSploit/" .. "AlSploitUpdateRewriteV" .. i .. ".lua")
		end
	end	
end

DeleteUnwantedFiles()

function CheckFirstTime()
	if readfile and isfile and isfile("AlSploit/" .. SaveFileName) then
		return false
	end
	if readfile and isfile and not isfile("AlSploit/" .. SaveFileName) then
		return true
	end
end

local FirstTime = CheckFirstTime()
local IsLoaded = false
local Settings

function CreateSettingsFile()
	Settings = {
		KillAura = {Value = true, Range = 26, Animation = true, CurrentAnimation = {["Value"] = "VerticalSpin"}, 
		Cooldown = true, DragonBreath = true, MultiAura = true, SwordOutline = true},
		Invisible = {Value = false},
		AutoKit = {Value = true},
		Reach = {Value = true, Range = 26},
		Rgb = {Value = true},
		Sprint = {Value = true},
		Statistics = {Value = true},
		NoKnockback = {Value = true},
		Speed = {Value = true, Speed = 23},
		JumpHeight = {Value = true, Height = 0},
		GalaxySky = {Value = true},
		TargetHud = {Value = true},
		VampireExploit = {Value = true},
		NoFall = {Value = true},
		InfFly = {Value = true},
		AcDisabler = {Value = true},
		Spider = {Value = true},
		PlayerTp = {Value = false},
		InfiniteJump = {Value = true},
		BedTp = {Value = false},
		Esp = {Value = true},
		Indicators = {Value = true},
		AutoToxic = {Value = false},
		AutoForge = {Value = true, Scythe = true, Dagger = false, Hammer = false, Sword = false, Bow = false, Armour = false},
		PickupRange = {Value = true},
		ChestStealer = {Value = true},
		Strafe = {Value = true},
		PlayAgain = {Value = true},
		AutoReport = {Value = true},
		LootSaver = {Value = true},
		AutoLeave = {Value = true},
		AntiVoid = {Value = true, Transparency = 0.65},
		Nuker = {Value = true, Range = 30},
		Cape = {Value = true},
		ExecutedAmount = {Value = 0},
	}
	FirstTime = false

	local JsonEncodeSettings = HttpService:JSONEncode(Settings)
	if writefile and makefolder then
		makefolder("AlSploit")
		writefile("AlSploit/" .. SaveFileName, JsonEncodeSettings)

		task.wait(0.1)
		IsLoaded = true
	end
end

function SaveSettings()	
	if not FirstTime then
		IsLoaded = true

		local JsonEncodeSettings = HttpService:JSONEncode(Settings)
		if writefile then
			writefile("AlSploit/" .. SaveFileName, JsonEncodeSettings)
		end
	end
end

function LoadSettings()
	if readfile and isfile and isfile("AlSploit/" .. SaveFileName) then
		Settings = HttpService:JSONDecode(readfile("AlSploit/" .. SaveFileName))
		Settings.KillAura.Cooldown = true
	end
end

local IsNetworkOwner = isnetworkowner or (gethiddenproperty and function(part)
	if gethiddenproperty(part, "NetworkOwnershipRule") == Enum.NetworkOwnership.Manual then 
		return false
	end
	return true
end) or function() return true end

task.spawn(function()
	TextChatService.OnIncomingMessage = function(Message)
		local Properties = Instance.new("TextChatMessageProperties")
		if Message.TextSource then
			local Player = game:GetService("Players"):GetPlayerByUserId(Message.TextSource.UserId)
			if Player.Name == LocalPlayer.Name then
				Properties.PrefixText = "<font color='#ffff00'>[AlSploit User]</font> " .. Message.PrefixText                 
			end
			if Player.Name == Owner then
				Properties.PrefixText = "<font color='#EE82EE'>[AlSploit Owner]</font> " .. Message.PrefixText                 
			end
		end
		return Properties
	end
end)

function CreateHud()
	local Main = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local UsernameDisplay = Instance.new("TextLabel")
	local DisplayBackground = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local Display = Instance.new("Frame")
	local UICorner_3 = Instance.new("UICorner")
	local Hp = Instance.new("TextLabel")
	local UIStroke = Instance.new("UIStroke")

	UIStroke.Parent = Main
	UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke.Color = Color3.new(ColorValue1, ColorValue2, ColorValue3)

	task.spawn(function()
		while task.wait(0.01) do
			UIStroke.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
		end
	end)

	UIStroke.LineJoinMode = Enum.LineJoinMode.Round
	UIStroke.Thickness = 3
	UIStroke.Transparency = 0

	Main.Name = "Hud"
	Main.Parent = AlSploit
	Main.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Main.BackgroundTransparency = 0.600
	Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Main.BorderSizePixel = 0
	Main.Position = UDim2.new(0.402, 0, 0.663, 0)
	Main.Size = UDim2.new(0, 0, 0, 0)

	UICorner.CornerRadius = UDim.new(0, 16)
	UICorner.Parent = Main

	UsernameDisplay.Name = "UsernameDisplay"
	UsernameDisplay.Parent = Main
	UsernameDisplay.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	UsernameDisplay.BackgroundTransparency = 1.000
	UsernameDisplay.BorderColor3 = Color3.fromRGB(0, 0, 0)
	UsernameDisplay.BorderSizePixel = 0
	UsernameDisplay.Position = UDim2.new(0, 34, 0, 0)
	UsernameDisplay.Size = UDim2.new(0.766666651, 0, 0.294117659, 0)
	UsernameDisplay.Font = Enum.Font.FredokaOne
	UsernameDisplay.Text = "Username:"
	UsernameDisplay.TextColor3 = Color3.fromRGB(170, 0, 255)
	UsernameDisplay.TextScaled = true
	UsernameDisplay.TextSize = 15.000
	UsernameDisplay.TextWrapped = true

	DisplayBackground.Name = "DisplayBackground"
	DisplayBackground.Parent = Main
	DisplayBackground.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
	DisplayBackground.BorderColor3 = Color3.fromRGB(0, 0, 0)
	DisplayBackground.BorderSizePixel = 0
	DisplayBackground.Position = UDim2.new(0.196666867, 0, 0.435294122, 0)
	DisplayBackground.Size = UDim2.new(0.603333175, 0, 0.117647059, 0)

	UICorner_2.Parent = DisplayBackground

	Display.Name = "Display"
	Display.Parent = DisplayBackground
	Display.BackgroundColor3 = Color3.fromRGB(170, 0, 255)
	Display.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Display.BorderSizePixel = 0
	Display.Size = UDim2.new(0.718232155, 0, 1, 0)

	UICorner_3.Parent = Display

	Hp.Name = "Hp"
	Hp.Parent = Main
	Hp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Hp.BackgroundTransparency = 1.000
	Hp.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Hp.BorderSizePixel = 0
	Hp.Position = UDim2.new(0, 94, 0, 50)
	Hp.Size = UDim2.new(0.36666677, 0, 0.394117659, 0)
	Hp.Font = Enum.Font.FredokaOne
	Hp.Text = "Hp: 100"
	Hp.TextColor3 = Color3.fromRGB(170, 0, 255)
	Hp.TextScaled = true
	Hp.TextSize = 15.000
	Hp.TextWrapped = true
	
	local Size = UDim2.new(0, 300, 0, 85)
	local TweenInformation = TweenInfo.new(0.3, Enum.EasingStyle.Exponential, Enum.EasingDirection.In, 0, false, 0)	
	local Tween = TweenService:Create(Main, TweenInformation, {Size = Size})	
	Tween:Play()

	return Main, Hp, UsernameDisplay, Display
end

function CreateStatisticFrame()
	local StatisticsBackground = Instance.new("Frame")
	local UIStroke = Instance.new("UIStroke")
	local UICorner = Instance.new("UICorner")
	local Ping = Instance.new("TextLabel")
	local Kills = Instance.new("TextLabel")
	local Bed = Instance.new("TextLabel")
	
	local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
	local UITextSizeConstraint_1 = Instance.new("UITextSizeConstraint")
	local UITextSizeConstraint_2 = Instance.new("UITextSizeConstraint")

	StatisticsBackground.Name = "StatisticsBackground"
	StatisticsBackground.Parent = AlSploit
	StatisticsBackground.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
	StatisticsBackground.BorderColor3 = Color3.fromRGB(0, 0, 0)
	StatisticsBackground.BorderSizePixel = 0
	StatisticsBackground.Position = UDim2.new(0.002, 0, 0.298, 0)
	StatisticsBackground.Size = UDim2.new(0.098, 0, 0.34, 0)

	UICorner.Parent = StatisticsBackground

	Ping.Name = "Ping"
	Ping.Parent = StatisticsBackground
	Ping.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Ping.BackgroundTransparency = 1.000
	Ping.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Ping.BorderSizePixel = 0
	Ping.Position = UDim2.new(0.163333327, 0, 0.129166722, 0)
	Ping.Size = UDim2.new(0.666666687, 0, 0.150000006, 0)
	Ping.Font = Enum.Font.FredokaOne
	Ping.Text = "Ping: 100"
	Ping.TextColor3 = Color3.fromRGB(34, 101, 203)
	Ping.TextScaled = true
	Ping.TextSize = 14.000
	Ping.TextWrapped = true
	
	UITextSizeConstraint.Parent = Ping
	UITextSizeConstraint.MaxTextSize = 30

	Kills.Name = "Kills"
	Kills.Parent = StatisticsBackground
	Kills.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Kills.BackgroundTransparency = 1.000
	Kills.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Kills.BorderSizePixel = 0
	Kills.Position = UDim2.new(0.163333327, 0, 0.67083329, 0)
	Kills.Size = UDim2.new(0.666666687, 0, 0.150000006, 0)
	Kills.Font = Enum.Font.FredokaOne
	Kills.Text = "Kills: 100"
	Kills.TextColor3 = Color3.fromRGB(34, 101, 203)
	Kills.TextScaled = false
	Kills.TextSize = 30
	Kills.TextWrapped = true
	
	UITextSizeConstraint_1.Parent = Kills
	UITextSizeConstraint_1.MaxTextSize = 30

	Bed.Name = "Bed"
	Bed.Parent = StatisticsBackground
	Bed.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Bed.BackgroundTransparency = 1.000
	Bed.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Bed.BorderSizePixel = 0
	Bed.Position = UDim2.new(0.163333327, 0, 0.397500008, 0)
	Bed.Size = UDim2.new(0.666666687, 0, 0.150000006, 0)
	Bed.Font = Enum.Font.FredokaOne
	Bed.Text = "Bed: 100"
	Bed.TextColor3 = Color3.fromRGB(34, 101, 203)
	Bed.TextScaled = false
	Bed.TextSize = 30
	Bed.TextWrapped = true
	
	UITextSizeConstraint_2.Parent = Bed
	UITextSizeConstraint_2.MaxTextSize = 30

	UIStroke.LineJoinMode = Enum.LineJoinMode.Round
	UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke.Thickness = 3
	UIStroke.Transparency = 0
	UIStroke.Parent = StatisticsBackground

	task.spawn(function()
		while task.wait() do
			if Settings.Rgb.Value == true then
				UIStroke.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
				Ping.TextColor3 = Color3.fromHSV(tick() % 5 / 5, 1, 1)
				Bed.TextColor3 = Color3.fromHSV(tick() % 5 / 5, 1, 1)
				Kills.TextColor3 = Color3.fromHSV(tick() % 5 / 5, 1, 1)
			end

			if Settings.Rgb.Value == false then
				UIStroke.Color = Color3.new(ColorValue1, ColorValue2, ColorValue3)
				Ping.TextColor3 = Color3.new(ColorValue1, ColorValue2, ColorValue3)
				Bed.TextColor3 = Color3.new(ColorValue1, ColorValue2, ColorValue3)
				Kills.TextColor3 = Color3.new(ColorValue1, ColorValue2, ColorValue3)
			end
		end
	end)

	return StatisticsBackground
end

function Notify(Message, Time, Type)
	task.spawn(function()
		local NewNotification = Notification:Clone()
		NewNotification.Parent = Container
		NewNotification.Text.Text = Message
		NewNotification.Title.Text = Type
		NewNotification.Visible = true
		NewNotification.Size = UDim2.fromScale(0, 0)

		local TweenInformation = TweenInfo.new(0.4, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out, 0, false, 0)
		local NotificationSizeTween = TweenService:Create(NewNotification, TweenInformation, {Size = OldSize})	
		NotificationSizeTween:Play()

		task.wait(Time)

		local TweenInformation2 = TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)	
		local NotificationSizeTween2 = TweenService:Create(NewNotification, TweenInformation2, {Size = UDim2.new(0, 0, 0, 0)})	
		NotificationSizeTween2:Play()

		task.wait(0.3)	
		NewNotification:Destroy()
	end)
end

function GetMatchState()
	return Bedwars["ClientHandlerStore"]:getState().Game.matchState
end

local function RoundPosition(Direction, Position, Size)
	local Success, Return = pcall(function() return Vector3.new(math.clamp(Direction.X, Position.X - (Size.X / 2), Position.X + (Size.X / 2)), math.clamp(Direction.Y, Position.Y - (Size.Y / 2), Position.Y + (Size.Y / 2)), math.clamp(Direction.Z, Position.Z - (Size.Z / 2), Position.Z + (Size.Z / 2))) end)
	return Success and Return or Vector3.zero
end

function GetPlacedBlock(Position)
	local RoundedPosition = Bedwars.BlockController:getBlockPosition(Position)
	return Bedwars.BlockController:getStore():getBlockAt(RoundedPosition), RoundedPosition
end

function GetQueueType()
	local state = Bedwars["ClientHandlerStore"]:getState()
	return state.Game.queueType or "bedwars_test"
end

function FakeBan()
	task.spawn(function()
		local UIBlox = getrenv().require(game:GetService("CorePackages").UIBlox)
		local Roact = getrenv().require(game:GetService("CorePackages").Roact)
		UIBlox.init(getrenv().require(game:GetService("CorePackages").Workspace.Packages.RobloxAppUIBloxConfig))
		local auth = getrenv().require(game:GetService("CoreGui").RobloxGui.Modules.LuaApp.Components.Moderation.ModerationPrompt)
		local darktheme = getrenv().require(game:GetService("CorePackages").Workspace.Packages.Style).Themes.DarkTheme
		local gotham = getrenv().require(game:GetService("CorePackages").Workspace.Packages.Style).Fonts.Gotham
		local tLocalization = getrenv().require(game:GetService("CorePackages").Workspace.Packages.RobloxAppLocales).Localization;
		local a = getrenv().require(game:GetService("CorePackages").Workspace.Packages.Localization).LocalizationProvider
		LocalPlayer.PlayerGui:ClearAllChildren()
		game:GetService("CoreGui"):ClearAllChildren()
		for i,v in pairs(workspace:GetChildren()) do pcall(function() v:Destroy() end) end
		task.wait(0.2)
		LocalPlayer:Kick()
		game:GetService("GuiService"):ClearError()
		task.wait(2)
		local gui = Instance.new("ScreenGui")
		gui.IgnoreGuiInset = true
		gui.Parent = game:GetService("CoreGui")
		local frame = Instance.new("Frame")
		frame.BorderSizePixel = 0
		frame.Size = UDim2.new(1, 0, 1, 0)
		frame.BackgroundColor3 = Color3.new(1, 1, 1)
		frame.Parent = gui
		task.delay(0.1, function()
			frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		end)
		task.delay(2, function()
			local e = Roact.createElement(auth, {
				style = {},
				screenSize = workspace.CurrentCamera and workspace.CurrentCamera.ViewportSize or Vector2.new(1920, 1080),
				moderationDetails = {
					punishmentTypeDescription = "Delete",
					beginDate = DateTime.fromUnixTimestampMillis(DateTime.now().UnixTimestampMillis - ((60 * math.random(1, 6)) * 1000)):ToIsoDate(),
					reactivateAccountActivated = false,
					badUtterances = {},
					messageToUser = "Your account has been deleted for violating our Terms of Use for exploiting."
				},
				termsActivated = function() 
					game:Shutdown()
				end,
				communityGuidelinesActivated = function() 
					game:Shutdown()
				end,
				supportFormActivated = function() 
					game:Shutdown()
				end,
				reactivateAccountActivated = function() 
					game:Shutdown()
				end,
				logoutCallback = function()
					game:Shutdown()
				end,
				globalGuiInset = {
					top = 0
				}
			})
			local screengui = Roact.createElement("ScreenGui", {}, Roact.createElement(a, {
				localization = tLocalization.mock()
			}, {Roact.createElement(UIBlox.Style.Provider, {
				style = {
					Theme = darktheme,
					Font = gotham
				},
			}, {e})}))
			Roact.mount(screengui, game:GetService("CoreGui"))
		end)
	end)
end

function IsBlockCovered(pos)
	local CoveredSides = 0
	for i, v in pairs(CachedNormalSides) do
		local BlockPosition = (pos + (Vector3.FromNormalId(v) * 3))
		local Block = GetPlacedBlock(BlockPosition)
		if Block then
			CoveredSides = CoveredSides + 1
		end
	end
	return CoveredSides == #CachedNormalSides
end

function GetPlacedBlocksNear(Positon, Normal)
	local Blocks = {}
	local LastFound = nil
	for i = 1, 20 do
		local BlockPosition = (Positon + (Vector3.FromNormalId(Normal) * (i * 3)))
		local ExtraBlock = GetPlacedBlock(BlockPosition)
		local Covered = IsBlockCovered(BlockPosition)
		if ExtraBlock then
			if Bedwars.BlockController:isBlockBreakable({blockPosition = BlockPosition}, LocalPlayer) and (not BlacklistedBlocks[ExtraBlock.Name]) then
				table.insert(Blocks, ExtraBlock.Name)
			end
			LastFound = ExtraBlock
			if not Covered then
				break
			end
		else
			break
		end
	end
	return Blocks
end

function IsMoving()	
	local Position = LocalPlayer.Character.HumanoidRootPart.Position

	task.wait(0.001)
	if IsAlive(LocalPlayer) and LocalPlayer.Character.HumanoidRootPart.Position ~= Position then
		Position = LocalPlayer.Character.HumanoidRootPart.Position
		return true
	end
	if IsAlive(LocalPlayer) and LocalPlayer.Character.HumanoidRootPart.Position == Position then
		Position = LocalPlayer.Character.HumanoidRootPart.Position
		return false
	end
end

local function GetInventory(Player)
	if not Player then 
		return {Items = {}, Armor = {}}
	end

	local Success, Return = pcall(function() 
		return require(game:GetService("ReplicatedStorage").TS.inventory["inventory-util"]).InventoryUtil.getInventory(Player)
	end)

	if not Success then 
		return {Items = {}, Armor = {}}
	end
	if Player.Character and Player.Character:FindFirstChild("InventoryFolder") then 
		local InvFolder = Player.Character:FindFirstChild("InventoryFolder").Value
		if not InvFolder then return Return end
		for i, v in next, Return do 
			for i2, v2 in next, v do 
				if typeof(v2) == 'table' and v2.itemType then
					v2.instance = InvFolder:FindFirstChild(v2.itemType)
				end
			end
			if typeof(v) == 'table' and v.itemType then
				v.instance = InvFolder:FindFirstChild(v.itemType)
			end
		end
	end
	return Return
end

function CollectEnderChestItems()
	local EnderChest = game.ReplicatedStorage.Inventories:FindFirstChild(LocalPlayer.Name .. "_personal")

	for i, v in pairs(EnderChest:GetChildren()) do
		if v:IsA("Accessory") and (v.Name == "emerald" or v.Name == "iron" or v.Name == "diamond" or v.Name == "apple" or v.Name == "balloon") then
			Client:GetNamespace("Inventory"):Get("ChestGetItem"):CallServer(EnderChest, v)
		end
	end
end

function SecureEnderChestItems()
	local EnderChest = game.ReplicatedStorage.Inventories:FindFirstChild(LocalPlayer.Name)

	for i, v in pairs(EnderChest:GetChildren()) do
		if (v.Name == "emerald" or v.Name == "iron" or v.Name == "diamond" or v.Name == "gold") then
			Client:GetNamespace("Inventory"):Get("ChestGiveItem"):CallServer(game.ReplicatedStorage.Inventories:FindFirstChild(LocalPlayer.Name .. "_personal"), v)
		end
	end
end

local function GetPing()
	local DataPing = StatisticsService:FindFirstChild("Data Ping", true)

	local PingValue = DataPing and DataPing:GetValueString() and DataPing:GetValueString():split(".")[1]

	if PingValue and PingValue:match("%d+$") then
		return tonumber(PingValue)
	end

	return math.round(StatisticsService.PerformanceStats.Ping:GetValue())
end	

local function Vampire(Player)
	local VampireRemote = ReplicatedStorage.rbxts_include.node_modules["@rbxts"].net.out._NetManaged:WaitForChild("CursedCoffinApplyVampirism")

	repeat task.wait() until Player:GetAttribute("PlayerConnected") and IsAlive(Player)

	Player.CharacterAdded:Connect(function()
		task.wait(1)
		VampireRemote:FireServer({player = Player})
	end)
	VampireRemote:FireServer({player = Player})
end

function GetScythe()
	for i, v in pairs(game.Workspace:FindFirstChild("Camera"):FindFirstChild("Viewmodel"):GetChildren()) do
		if v:IsA("Accessory") and v.Name:find("scythe") then
			return true
		end
	end
end

local ScytheSlowdown = false

task.spawn(function()
	while task.wait() do
		if IsAlive(LocalPlayer) then
			local Velocity = LocalPlayer.Character.HumanoidRootPart.Velocity

			task.wait(0.01)

			local Magnitude = (Velocity - LocalPlayer.Character.HumanoidRootPart.Velocity).Magnitude

			ScytheSlowdown = false

			if Magnitude > 2 then
				ScytheSlowdown = true
			end
		end
	end
end)

local function GetSpeed()
	local Speed = 0

	if IsAlive(LocalPlayer) then 

		local SpeedDamageBoost =  LocalPlayer.Character:GetAttribute("SpeedBoost")

		if SpeedDamageBoost and SpeedDamageBoost > 1 then 
			Speed = Speed + (22 * (SpeedDamageBoost - 1))
		end

		if LocalPlayer.Character:GetAttribute("SpeedPieBuff") then 
			Speed = Speed + 5
		end

		if LocalPlayer.Character:GetAttribute("GrimReaperChannel") then 
			Speed = Speed + 20
		end

		local Armor = GetInventory().Armor[3]

		if type(Armor) ~= "table" then Armor = {itemType = ""} end

		if Armor.itemType == "Speed_boots" then 
			Speed = Speed + 25
		end

		if AcDisabled then		
			Speed = Speed + 55
			
			if ScytheSlowdown then
				Speed = Speed - 20
			end
			
			if KillauraAc then
				Speed = Speed - 30
			end
		end

		Speed = Speed + Settings.Speed.Speed	
	end
	
	return Speed
end

local function TouchingFloor()
	local Parameters = RaycastParams.new()
	Parameters.FilterType = Enum.RaycastFilterType.Exclude
	Parameters.FilterDescendantsInstances = {LocalPlayer.Character.HumanoidRootPart.Parent}

	local IsTouchingFloor = false
	for x = 1, 1 do
		local Origin = LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(x, 0, 0)
		local Raycast = game.Workspace:Raycast(Origin, Vector3.new(0, -3.5, 0), Parameters)
		if Raycast and Raycast.Instance then
			IsTouchingFloor = true			
		end
	end	
	return IsTouchingFloor
end

local BedwarsSwords = require(game:GetService("ReplicatedStorage").TS.games.bedwars["bedwars-swords"]).BedwarsMelees

function HashFunc(Vec)
	return {value = Vec}
end

function GetBeds()
	local Beds = {}

	for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
		if GetMatchState() ~= 0 and string.lower(v.Name) == "bed" and v:FindFirstChild("Covers") ~= nil and v:FindFirstChild("Covers").Color ~= LocalPlayer.Team.TeamColor then
			table.insert(Beds, v)
		end
	end

	return Beds
end

function FindNearestPlayer()
	local NearestPlayer
	local NearestDistance = math.huge
	for i, v in pairs(game.Players:GetChildren()) do
		if IsAlive(v) and v ~= LocalPlayer and v.Team ~= LocalPlayer.Team and not v.Character:GetAttribute("PetrifyId") then
			local Distance = (v.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
			if Distance < NearestDistance then
				NearestPlayer = v
				NearestDistance = Distance
			end
		end
	end

	return NearestPlayer
end

function GetSword()
	local Highest, Returning = -9e9, nil
	for i, v in next, GetInventory(LocalPlayer).items do 
		local Power = table.find(BedwarsSwords, v.itemType)
		if not Power then continue end 
		if Power > Highest then 
			Returning = v
			Highest = Power
		end
	end
	return Returning
end

function IsAlive(Player)
	Player = Player or LocalPlayer
	if not Player.Character then return false end
	if not Player.Character:FindFirstChild("Head") then return false end
	if not Player.Character:FindFirstChild("Humanoid") then return false end
	if Player.Character:FindFirstChild("Humanoid").Health < 0.11 then return false end
	if not Player.Character:FindFirstChild("HumanoidRootPart") then return false end
	
	return true
end

function GetServerPosition(Position)
	local X = math.round(Position.X / 3)
	local Y = math.round(Position.Y / 3)
	local Z = math.round(Position.Z / 3)
	return Vector3.new(X, Y, Z)
end

function SetCamera(Camera)
	workspace.CurrentCamera.CameraSubject = Camera
end



function TweenToNearestPlayer(NearestPlayer)
	if NearestPlayer then
		local TweenTime = 0.65
		local TweenInformation = TweenInfo.new(TweenTime, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
		local PlayerTween = TweenService:Create(LocalPlayer.Character.HumanoidRootPart, TweenInformation, {CFrame = NearestPlayer.Character.HumanoidRootPart.CFrame})
		if NearestPlayer.Character.Humanoid.Health > 0 then
			PlayerTween:Play()
		end
	end
end

function FindNearestBed()
	local NearestBed = nil
	local MinDistance = math.huge
	for _,v in pairs(game.Workspace:GetDescendants()) do
		if v.Name:lower() == "bed" and v:FindFirstChild("Covers") and v:FindFirstChild("Covers").BrickColor ~= LocalPlayer.Team.TeamColor then
			local Distance = (v.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
			if Distance < MinDistance then
				NearestBed = v
				MinDistance = Distance
			end
		end
	end
	return NearestBed
end

function TweenToNearestBed(NearestBed)
	if NearestBed then
		local TweenTime = 0.65
		local TweenInformation = TweenInfo.new(TweenTime, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
		local BedTween = TweenService:Create(LocalPlayer.Character.HumanoidRootPart, TweenInformation, {CFrame = NearestBed.CFrame + Vector3.new(0, 30, 0)})
		BedTween:Play()
	end
end

function KillHumanoid(Time)
	task.wait(Time)
	if LocalPlayer:FindFirstChild("leaderstats") and LocalPlayer.leaderstats:FindFirstChild("Bed") then
		if LocalPlayer.leaderstats.Bed.Value == "✅" then
			LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Dead)
			game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("node_modules"):WaitForChild("@rbxts"):WaitForChild("net"):WaitForChild("out"):WaitForChild("_NetManaged"):WaitForChild("ResetCharacter"):FireServer()
		end
	end
end

local OrigC0 = game:GetService("ReplicatedStorage").Assets.Viewmodel.RightHand.RightWrist.C0
local Animations = {
	["VerticalSpin"] = {
		{CFrame = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-90), math.rad(8), math.rad(5)), Time = 0.1},
		{CFrame = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(180), math.rad(3), math.rad(13)), Time = 0.1},
		{CFrame = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(90), math.rad(-5), math.rad(8)), Time = 0.1},
		{CFrame = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), Time = 0.1}	
	}
}

local ScytheSpinRemote = Client:Get("ScytheSpin").instance
local KillauraRemote = Client:Get(Bedwars.AttackRemote).instance
local JumpCooldown = false

function KillAuraHit()
	if IsLoaded then
		if Settings.KillAura.Value == true and IsAlive(LocalPlayer) and GetMatchState() ~= 0 then
			for i, v in pairs(game:GetService("Players"):GetChildren()) do
				if v.Team ~= LocalPlayer.Team and IsAlive(v) and IsAlive(LocalPlayer) and not v.Character:FindFirstChildOfClass("ForceField") and not v:GetAttribute("PetrifyId") and v.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then						
					local Magnitude = (v.Character:FindFirstChild("HumanoidRootPart").Position - LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position).Magnitude

					task.spawn(function()						
						if Magnitude <= 18 and AntiVoidPart and v.Character.HumanoidRootPart.Position.Y > AntiVoidPart.Position.Y + 6 then
							local NearestPlayer, NearestPlayerDistance = FindNearestPlayer()

							if NearestPlayer and Settings.Strafe.Value == true and IsAlive(LocalPlayer) and GetMatchState() ~= 0 and LocalPlayer.Character:GetAttribute("Health") >= 40 and IsNetworkOwner(LocalPlayer.Character.HumanoidRootPart) then
								local Magnitude = (LocalPlayer.Character.HumanoidRootPart.Position - NearestPlayer.Character.HumanoidRootPart.Position).Magnitude

								if Magnitude < 18 then
									local TweenInformation = TweenInfo.new(NearestPlayerDistance / (AcDisabled and 40 or 21), Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
									local PlayerTween = TweenService:Create(LocalPlayer.Character.HumanoidRootPart, TweenInformation, {CFrame = NearestPlayer.Character.HumanoidRootPart.CFrame})

									PlayerTween:Play()

									if JumpCooldown == false then
										JumpCooldown = true
										LocalPlayer.Character.Humanoid:ChangeState("Jumping")

										task.spawn(function()
											task.wait(0.75) 
											JumpCooldown = false
										end)
									end
								end
							end
						end
					end)

					if Magnitude <= Settings.KillAura.Range then
						local Sword = GetSword()
						if Sword ~= nil then
							if Settings.KillAura.Animation == true then

								spawn(function()
									if Settings.KillAura.Animation == true and Settings.KillAura.Cooldown and Magnitude <= 18 then
										Settings.KillAura.Cooldown = false
										for i, v in pairs(Animations[Settings.KillAura.CurrentAnimation["Value"]]) do
											game:GetService("TweenService"):Create(Camera.Viewmodel.RightHand.RightWrist, TweenInfo.new(v.Time),{C0 = OrigC0 * v.CFrame}):Play()
											task.wait(v.Time - 0.01)
										end
										Settings.KillAura.Cooldown = true
									end
								end)		

								local LocalPlayerHumanoidRootPart = LocalPlayer.Character.HumanoidRootPart 
								local EnemyHumanoidRootPart = v.Character.HumanoidRootPart 

								if Settings.Reach.Value == true then
									Bedwars["CombatConstant"].RAYCAST_SWORD_CHARACTER_DISTANCE = math.floor((LocalPlayerHumanoidRootPart.Position - EnemyHumanoidRootPart.Position).Magnitude * 100) / 100
								end

								LocalPlayerHumanoidRootPart = LocalPlayer.Character.HumanoidRootPart 
								EnemyHumanoidRootPart = v.Character.HumanoidRootPart 

								local SelfPosition = LocalPlayerHumanoidRootPart.Position + (Settings.KillAura.Range > 14 and (LocalPlayerHumanoidRootPart.Position - EnemyHumanoidRootPart.Position).Magnitude > 14.4 and (CFrame.lookAt(LocalPlayerHumanoidRootPart.Position, EnemyHumanoidRootPart.Position).lookVector * ((LocalPlayerHumanoidRootPart.Position - EnemyHumanoidRootPart.Position).Magnitude - 14)) or Vector3.zero)

								if Settings.KillAura.MultiAura == true then
									ScytheSpinRemote:FireServer({position = SelfPosition})
								end

								AcDisabled = false

								if GetPing() < 300 then
									KillauraRemote:FireServer({
										weapon = Sword.tool,
										chargedAttack = {chargeRatio = 0},
										entityInstance = v.Character,
										validate = {
											raycast = {
												cameraPosition = HashFunc(LocalPlayerHumanoidRootPart.Position), 
												cursorDirection = HashFunc(CFrame.new(SelfPosition, EnemyHumanoidRootPart.Position).lookVector)
											},
											targetPosition = HashFunc(EnemyHumanoidRootPart.Position),
											selfPosition = HashFunc(SelfPosition)
										}
									})
								end

								if GetPing() >= 300 then
									local Args = {
										[1] = {
											["chargedAttack"] = {["chargeRatio"] = 0},
											["entityInstance"] = v.Character,
											["validate"] = {
												["targetPosition"] = HashFunc(v.Character:FindFirstChild("HumanoidRootPart").Position),
												["selfPosition"] = HashFunc(LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position + ((LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - v.Character:FindFirstChild("HumanoidRootPart").Position).Magnitude > 14 and (CFrame.lookAt(LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position, v.Character:FindFirstChild("HumanoidRootPart").Position).LookVector * 4) or Vector3.new(0, 0, 0))),
											},
											["weapon"] = Sword.tool,
										}
									}

									game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.SwordHit:FireServer(unpack(Args))								
								end

								if Magnitude <= 18 then
									if Settings.KillAura.DragonBreath == true then
										game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.DragonBreath:FireServer({
											--["Player"] = LocalPlayer
										})
									end
								end	
							end
						end
					end
				end
			end
		end
	end
end

task.spawn(function()
	while task.wait(1) do
		if GetMatchState() ~= 0 and IsLoaded then
			KillAuraHit()		
		end
	end	
end)

task.spawn(function()	
	local function BuyInfernalSaber()

		local Args1 = {
			[1] = {
				["shopItem"] = {
					["currency"] = "emerald",
					["itemType"] = "infernal_saber",
					["amount"] = 1,
					["price"] = 3,
					["catagory"] = "Combat",
					["requiresKit"] = {
						[1] = "ember"
					},
					["lockAfterPurchase"] = true
				},
				["shopId"] = "1_item_shop_1"
			}
		}

		local Args2 = {
			[1] = {
				["shopItem"] = {
					["currency"] = "emerald",
					["itemType"] = "infernal_saber",
					["amount"] = 1,
					["price"] = 3,
					["catagory"] = "Combat",
					["requiresKit"] = {
						[1] = "ember"
					},
					["lockAfterPurchase"] = true
				},
				["shopId"] = "2_item_shop_1"
			}
		}

		local Args3 = {
			[1] = {
				["shopItem"] = {
					["currency"] = "emerald",
					["itemType"] = "infernal_saber",
					["amount"] = 1,
					["price"] = 3,
					["catagory"] = "Combat",
					["requiresKit"] = {
						[1] = "ember"
					},
					["lockAfterPurchase"] = true
				},
				["shopId"] = "3_item_shop_1"
			}
		}

		local Args4 = {
			[1] = {
				["shopItem"] = {
					["currency"] = "emerald",
					["itemType"] = "infernal_saber",
					["amount"] = 1,
					["price"] = 3,
					["catagory"] = "Combat",
					["requiresKit"] = {
						[1] = "ember"
					},
					["lockAfterPurchase"] = true
				},
				["shopId"] = "4_item_shop_1"
			}
		}

		game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged:WaitForChild("BedwarsPurchaseItem"):InvokeServer(unpack(Args1))
		game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged:WaitForChild("BedwarsPurchaseItem"):InvokeServer(unpack(Args2))
		game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged:WaitForChild("BedwarsPurchaseItem"):InvokeServer(unpack(Args3))
		game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged:WaitForChild("BedwarsPurchaseItem"):InvokeServer(unpack(Args4))
	end

	local function InstaKill()
		local Args = {
			[1] = {
				["chargeTime"] = 0.5,
				["player"] = LocalPlayer,
				["weapon"] = ReplicatedStorage:WaitForChild("Inventories"):WaitForChild(LocalPlayer.Name):WaitForChild("infernal_saber")
			}
		}

		game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged:WaitForChild("HellBladeRelease"):FireServer(unpack(Args))
	end

	task.spawn(function()
		while task.wait(0.1) do
			if not ReplicatedStorage:WaitForChild("Inventories"):WaitForChild(LocalPlayer.Name):FindFirstChild("infernal_saber") and IsAlive(LocalPlayer) and GetMatchState() ~= 0 then
				BuyInfernalSaber()
			end
		end
	end)

	task.spawn(function()
		while task.wait() do
			if ReplicatedStorage:WaitForChild("Inventories"):WaitForChild(LocalPlayer.Name):FindFirstChild("infernal_saber") and GetPing() <= 600 then
				InstaKill()
			end
		end
	end)
end)

task.spawn(function()
	local Cooldown = false

	while task.wait() do
		if GetMatchState() ~= 0 and IsAlive(LocalPlayer) then
			for i, v in pairs(game.Players:GetPlayers()) do
				if IsAlive(v) and v ~= LocalPlayer and v.Team ~= LocalPlayer.Team and not v:GetAttribute("PetrifyId") and v.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
					local Magnitude = (LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude

					if Magnitude <= 18 and Cooldown == false and not AlSploit:FindFirstChild("Hud") and Settings.TargetHud.Value == true then
						Cooldown = true
						KillauraAc = true
						
						local Hud, Health, Username, Slider = CreateHud()

						task.spawn(function()
							repeat	
								task.wait()

								Magnitude = (LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude

								if Magnitude > 18 or not IsAlive(v) or not IsAlive(LocalPlayer) or v:GetAttribute("PetrifyId") then
									
									local Size = UDim2.new(0, 0, 0, 0)
									
									Hud.Visible = true
									
									local TweenInformation = TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, 0, false, 0)	
									local Tween = TweenService:Create(Hud, TweenInformation, {Size = Size})	
									Tween:Play()
									
									task.spawn(function()
										task.wait(0.3)
										
										Hud:Destroy()
									end)

									Cooldown = false
									KillauraAc = false
								end

								Health.Text = "Hp: " .. math.round(v.Character:GetAttribute("Health")) .. " / " .. math.round(v.Character:GetAttribute("MaxHealth"))
								Username.Text = "Username: " .. v.Name

								local TweenInformation = TweenInfo.new(0.35, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, 0, false, 0)

								local Tween = TweenService:Create(Slider, TweenInformation, {Size = UDim2.new(math.round(v.Character:GetAttribute("Health")) / math.round(v.Character:GetAttribute("MaxHealth")), 0, 1, 0)})
								Tween:Play()

							until not AlSploit:FindFirstChild("Hud") or Settings.TargetHud.Value == false
						end)						
					end
				end
			end
		end
	end
end)

task.spawn(function()
	local StatisticFrame = nil
	local Cooldown = false

	while task.wait(0.1) do				
		if GetMatchState() ~= 0 then
			if Settings.Statistics.Value == true and Cooldown == false then
				Cooldown = true
				StatisticFrame = CreateStatisticFrame()			
			end

			if Settings.Statistics.Value == false then
				Cooldown = false

				if StatisticFrame ~= nil then
					StatisticFrame:Destroy()
					StatisticFrame = nil
				end
			end 	

			if StatisticFrame ~= nil then
				AlSploit.StatisticsBackground.Ping.Text = "Ping: " .. GetPing()
				AlSploit.StatisticsBackground.Kills.Text = "Kills: " .. LocalPlayer.leaderstats.Kills.Value
				AlSploit.StatisticsBackground.Bed.Text = "Bed: " .. LocalPlayer.leaderstats.Bed.Value
			end	
		end
	end	
end)

task.spawn(function()
	repeat
		task.wait()
		if IsLoaded and GetMatchState() ~= 0 then
			if Settings.KillAura.Value == true and IsAlive(LocalPlayer) and GetMatchState() ~= 0 then
				for i, v in pairs (CollectionService:GetTagged("DiamondGuardian")) do
					if v and v.PrimaryPart then
						local Magnitude = (LocalPlayer.Character.HumanoidRootPart.Position - v.PrimaryPart.Position).Magnitude
						if Magnitude <= Settings.KillAura.Range then
							local Sword = GetSword()
							if Sword then

								if Magnitude <= 18 then

									if Settings.KillAura.DragonBreath == true then
										game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.DragonBreath:FireServer({
											["Player"] = LocalPlayer
										})
									end

									if Settings.KillAura.Animation == true then
										spawn(function()
											if Settings.KillAura.Animation == true and Settings.KillAura.Cooldown then
												Settings.KillAura.Cooldown = false
												for i, v in pairs(Animations[Settings.KillAura.CurrentAnimation["Value"]]) do
													game:GetService("TweenService"):Create(Camera.Viewmodel.RightHand.RightWrist,TweenInfo.new(v.Time),{C0 = OrigC0 * v.CFrame}):Play()
													task.wait(v.Time - 0.01)
												end
												Settings.KillAura.Cooldown = true
											end
										end)
									end
								end

								local Args = {
									[1] = {
										["chargedAttack"] = {["chargeRatio"] = 0},
										["entityInstance"] = v,
										["validate"] = {
											["targetPosition"] = HashFunc(v.PrimaryPart.Position),
											["selfPosition"] = HashFunc(LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position + Vector3.new(0, -0.03, 0) + ((LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - v.PrimaryPart.Position).Magnitude > 14 and (CFrame.lookAt(LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position, v.PrimaryPart.Position).LookVector * 4) or Vector3.new(0, 0, 0))),
										}, 
										["weapon"] = Sword.tool,
									}}

								game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.SwordHit:FireServer(unpack(Args))

								AcDisabled = false
							end
						end
					end
				end
			end
		end
	until not game
end)

function IsNetworkOwner(Part)
	if gethiddenproperty(Part, "NetworkOwnershipRule") == Enum.NetworkOwnership.Manual then 
		return false
	end
	return true
end

local Flying = false
local FlyGroundTime = tick()

function Fly()
	local FlyUp = false
	local FlyDown = false
	local FlyBodyVelocity
	Flying = not Flying

	if Flying == true then
		Notify("Fly has been enabled!", "3", "Toggle")
	end

	if Flying == false then
		Notify("Fly has been disabled!", "3", "Toggle")
	end

	if Flying == true then

		task.spawn(function()			
			UserInputService.InputBegan:Connect(function(Input)
				if Input.KeyCode == Enum.KeyCode.Space then
					FlyUp = true
				end

				if Input.KeyCode == Enum.KeyCode.LeftShift then
					FlyDown = true
				end			
			end)

			UserInputService.InputEnded:Connect(function(Input)
				if Input.KeyCode == Enum.KeyCode.Space then
					FlyUp = false
				end

				if Input.KeyCode == Enum.KeyCode.LeftShift then
					FlyDown = false
				end
			end)			
		end)

		spawn(function()
			FlyBodyVelocity = Instance.new("BodyVelocity")
			FlyBodyVelocity.MaxForce = Vector3.new(0, 9e9, 0)
			FlyBodyVelocity.Name = "FlyBodyVelocity"
			FlyBodyVelocity.Parent = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")	

			FlyGroundTime = tick()

			while task.wait() do
				if Flying == true and IsAlive(LocalPlayer) then

					FlyBodyVelocity.Velocity = Vector3.new(0, (FlyUp and 50 or 0) + (FlyDown and -50 or 0), 0)

					if (tick() - FlyGroundTime) >= 2 and Flying == true then

						local OldPositionPart = Instance.new("Part", workspace)
						OldPositionPart.Name = "OldPositionPart"
						OldPositionPart.Position = LocalPlayer.Character.HumanoidRootPart.Position
						OldPositionPart.Anchored = true
						OldPositionPart.CanCollide = false
						OldPositionPart.Transparency = 1

						local RaycastParameters = RaycastParams.new()
						RaycastParameters.FilterDescendantsInstances = {LocalPlayer.Character}
						RaycastParameters.FilterType = Enum.RaycastFilterType.Exclude

						local Raycast = workspace:Raycast(OldPositionPart.Position, Vector3.new(OldPositionPart.Position.X, -1000, OldPositionPart.Position.Z), RaycastParameters)

						if Raycast and Raycast.Instance then
							local NewPositionPart = Instance.new("Part")
							NewPositionPart.Name = "NewPositionPart"
							NewPositionPart.Position = Vector3.new(OldPositionPart.Position.X, Raycast.Instance.Position.Y + 4, OldPositionPart.Position.Z)
							NewPositionPart.Anchored = true
							NewPositionPart.CanCollide = false
							NewPositionPart.Transparency = 1
							NewPositionPart.Size = Vector3.new(0.01, 0.01, 0.01)
							NewPositionPart.Orientation = LocalPlayer.Character.HumanoidRootPart.Orientation

							LocalPlayer.Character.HumanoidRootPart.CFrame = NewPositionPart.CFrame
							task.wait(0.1)
							OldPositionPart.Position = Vector3.new(LocalPlayer.Character.HumanoidRootPart.Position.X, OldPositionPart.Position.Y, LocalPlayer.Character.HumanoidRootPart.Position.Z)
							LocalPlayer.Character.HumanoidRootPart.CFrame = OldPositionPart.CFrame
							FlyGroundTime = 0
							OldPositionPart:Destroy()
							NewPositionPart:Destroy()					

							FlyGroundTime = tick()
						end
					end
				end
			end
		end)
	end

	if Flying == false and LocalPlayer.Character.HumanoidRootPart:FindFirstChild("FlyBodyVelocity") then
		LocalPlayer.Character.HumanoidRootPart:FindFirstChild("FlyBodyVelocity"):Destroy()
		FlyGroundTime = tick()
	end

	if not IsAlive(LocalPlayer) and LocalPlayer.Character.HumanoidRootPart:FindFirstChild("FlyBodyVelocity") then
		LocalPlayer.Character.HumanoidRootPart:FindFirstChild("FlyBodyVelocity"):Destroy()
		FlyGroundTime = tick()
	end
end

local InfFlying = false
local SpoofedCamera = nil
local StartLevel = nil

local InfFlyUp = false
local InfFlyDown = false

local InfFlying = false
local SpoofedCamera = nil
local StartLevel = nil

local InfFlyUp = false
local InfFlyDown = false

function InfFly()
	InfFlying = not InfFlying

	if InfFlying == true then
		Notify("Infinite Fly has been enabled!", "3", "Toggle")
	end

	if InfFlying == false then
		Notify("Infinite Fly has been disabled!", "3", "Toggle")
	end	

	if Settings.InfFly.Value == true and InfFlying == true and IsAlive(LocalPlayer) then
		task.spawn(function()
			UserInputService.InputBegan:Connect(function(Input)
				if Input.KeyCode == Enum.KeyCode.Space then
					InfFlyUp = true
				end
				if Input.KeyCode == Enum.KeyCode.LeftShift then
					InfFlyDown = true
				end
			end)
			UserInputService.InputEnded:Connect(function(Input)
				if Input.KeyCode == Enum.KeyCode.Space then
					InfFlyUp = false
				end
				if Input.KeyCode == Enum.KeyCode.LeftShift then
					InfFlyDown = false
				end
			end)
		end)

		StartLevel = LocalPlayer.Character.Head.Position.Y
		
		SpoofedCamera = Instance.new("Part")
		SpoofedCamera.Parent = game.Workspace
		SpoofedCamera.Anchored = true
		SpoofedCamera.Transparency = 1
		SpoofedCamera.Position = LocalPlayer.Character.Head.Position
		
		SetCamera(SpoofedCamera)
		LocalPlayer.Character.PrimaryPart.CFrame += Vector3.new(0, 1000000, 0)
		SpoofedCamera.Position = Vector3.new(SpoofedCamera.Position.X, StartLevel, SpoofedCamera.Position.Z)

		repeat task.wait()
			SpoofedCamera.Position = Vector3.new(LocalPlayer.Character.PrimaryPart.Position.X, SpoofedCamera.Position.Y + (InfFlyUp and 1 or 0) + (InfFlyDown and -1 or 0), LocalPlayer.Character.PrimaryPart.Position.Z)
			StartLevel = SpoofedCamera.Position.Y	
		until Settings.InfFly.Value == false or InfFlying == false

		if Settings.InfFly.Value == false or not InfFlying or not IsAlive(LocalPlayer) then
			LocalPlayer.Character.PrimaryPart.CFrame = SpoofedCamera.CFrame + Vector3.new(0, 10, 0)
			game.Workspace.Gravity = 0
			
			SetCamera(LocalPlayer.Character)
			
			SpoofedCamera:Remove()
			task.wait(0.25)
			game.Workspace.Gravity = 196.2
		end
	end
end

task.spawn(function()
	local Highlight
	local Cooldown = false
	local IsHighlight = false

	task.spawn(function()
		while task.wait(0.01) do
			for i, v in pairs(game.Workspace.Camera.Viewmodel:GetChildren()) do
				if v:IsA("Accessory") and v.Handle:FindFirstChild("Highlight") then
					IsHighlight = true
				end

				if v:IsA("Accessory") and not v.Handle:FindFirstChild("Highlight") then
					IsHighlight = false
				end

			end		
		end
	end)

	while task.wait(0.01) do
		if Settings.KillAura.SwordOutline == true then	
			if Cooldown == false or not IsHighlight then
				for i, v in pairs(game.Workspace.Camera:FindFirstChild("Viewmodel"):GetChildren()) do
					if v:IsA("Accessory") and v:FindFirstChild("Handle") then
						Cooldown = true

						Highlight = Instance.new("Highlight")
						Highlight.Parent = v.Handle
						Highlight.OutlineColor = Color3.new(0.666667, 0, 1)
						Highlight.FillTransparency = 0.7
						Highlight.FillColor = Color3.new(0.666667, 0, 1)
					end
				end		
			end	
		end

		if Settings.KillAura.SwordOutline == false and IsHighlight then			
			for i, v in pairs(game.Workspace.Camera.Viewmodel:GetChildren()) do
				if v:IsA("Accessory") and v.Handle:FindFirstChild("Highlight") then
					Cooldown = false

					Highlight:Destroy()
				end
			end			
		end
	end
end)

task.spawn(function()
	repeat task.wait() until IsLoaded and GetMatchState() ~= 0
		
	for i, v in pairs(game.Players:GetChildren()) do
		if v ~= LocalPlayer and Settings.VampireExploit.Value == true and v.Team ~= LocalPlayer.Team then
			Vampire(v)
		end
	end
	
	game.Players.PlayerAdded:Connect(function(Player)
		if Player ~= LocalPlayer and Settings.VampireExploit.Value == true then
			VampireRemote(Player)
		end
	end)
end)

task.spawn(function()
	local Cooldown = false	
	while task.wait(0.05) do

		if LightingService:FindFirstChild("Sky") and Settings.GalaxySky.Value == true and Cooldown == false then
			LightingService.Sky.Parent = ReplicatedStorage

			local Sky = Instance.new("Sky")
			local ID = 8281961896

			Sky.SkyboxBk = "http://www.roblox.com/asset/?id=" .. ID
			Sky.SkyboxDn = "http://www.roblox.com/asset/?id=" .. ID
			Sky.SkyboxFt = "http://www.roblox.com/asset/?id=" .. ID
			Sky.SkyboxLf = "http://www.roblox.com/asset/?id=" .. ID
			Sky.SkyboxRt = "http://www.roblox.com/asset/?id=" .. ID
			Sky.SkyboxUp = "http://www.roblox.com/asset/?id=" .. ID

			Sky.Parent = LightingService

			Cooldown = true
		end

		if ReplicatedStorage:FindFirstChild("Sky") and LightingService:FindFirstChild("Sky") and Settings.GalaxySky.Value == false then
			LightingService.Sky:Destroy()

			ReplicatedStorage.Sky.Parent = LightingService 

			Cooldown = false
		end
	end
end)

local Climbing = false

task.spawn(function()
	while task.wait() and IsLoaded and GetMatchState() ~= 0 and Settings.Spider.Value == true and IsAlive(LocalPlayer) do
		Climbing = false

		local LocalPlayerVector = LocalPlayer.Character.Humanoid.MoveDirection * 2
		local NewRay = GetPlacedBlock(LocalPlayer.Character.HumanoidRootPart.Position + (LocalPlayerVector + Vector3.new(0, 0.1, 0)))
		local NewRay2 = GetPlacedBlock(LocalPlayer.Character.HumanoidRootPart.Position + (LocalPlayerVector - Vector3.new(0, LocalPlayer.Character.Humanoid.HipHeight, 0)))

		if NewRay and (not NewRay.CanCollide) then 
			NewRay = nil 
		end 

		if NewRay2 and (not NewRay2.CanCollide) then
			NewRay2 = nil 
		end 

		if Climbing and (not NewRay) and (not NewRay2) then
			LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(LocalPlayer.Character.HumanoidRootPart.Velocity.X, 0, LocalPlayer.Character.HumanoidRootPart.Velocity.Z)
		end

		Climbing = ((NewRay or NewRay2) and true or false)
		if (NewRay or NewRay2) then
			LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(NewRay2 and NewRay == nil and LocalPlayer.Character.HumanoidRootPart.Velocity.X or 0, 50, NewRay2 and NewRay == nil and LocalPlayer.Character.HumanoidRootPart.Velocity.Z or 0)
		end

		local NewRay2, NewRay2Position = GetPlacedBlock(LocalPlayer.Character.HumanoidRootPart.Position + ((LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector * 1.5) - Vector3.new(0, LocalPlayer.Character.Humanoid.HipHeight, 0)))
		if NewRay2 and (not NewRay2.CanCollide) then NewRay2 = nil end
		Climbing = (NewRay2 and true or false)
	end
end)

spawn(function()
	repeat
		task.wait()
		if IsLoaded then

			if Settings.Sprint.Value == true and IsAlive(LocalPlayer) then
				Bedwars.SprintController:startSprinting()
			end

			if Settings.NoKnockback.Value == true and GetMatchState() ~= 0 then
				Bedwars["KnockbackTable"]["kbDirectionStrength"] = 0
				Bedwars["KnockbackTable"]["kbUpwardStrength"] = 0
			end

			if Settings.NoFall.Value == true and IsAlive(LocalPlayer) and GetMatchState() ~= 0 then
				game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.GroundHit:FireServer()
			end

		end
	until not game
end)

task.spawn(function()	
	UserInputService.JumpRequest:Connect(function()
		Jumping = true
		
		if IsAlive(LocalPlayer) and Settings.InfiniteJump.Value == true then
			LocalPlayer.Character.Humanoid:ChangeState("Jumping")
			task.spawn(function()
				task.wait(0.3)
				Jumping = false
			end)
		end
	end)
end)

task.spawn(function()
	local AlreadyReportedList = {}
	repeat
		task.wait(3)
		if IsLoaded and GetMatchState() ~= 0 then
			if Settings.AutoReport.Value == true then
				for i, v in pairs(game.Players:GetChildren()) do 
					table.insert(AlreadyReportedList, v)
					if v ~= LocalPlayer and AlreadyReportedList[v] == nil and v:IsA("Player") and Settings.AutoReport.Value == true then 
						AlreadyReportedList[v] = true
						game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.ReportPlayer:FireServer(v.UserId)
					end
				end
			end
		end
	until not game
end)

task.spawn(function()
	repeat task.wait() until LocalPlayer:FindFirstChild("leaderstats") and LocalPlayer:FindFirstChild("leaderstats"):FindFirstChild("Kills")

	LocalPlayer.leaderstats.Kills.Changed:Connect(function()
		if Settings.AutoToxic.Value == true then
			local KillMessage = ""
			local ExtraMessage = ""
			local Randomized = math.random(0, 5)

			if Randomized == 0 then
				KillMessage = "You are so bad u died. | AlSpoit on top" .. ExtraMessage
			end
			if Randomized ~= 0 then
				KillMessage = "I could probably win without cheats. | AlSpoit on top" .. ExtraMessage
			end
			if Randomized == 2 then
				KillMessage = "I do not care about the fact that I am hacking but that you died in a block game. | AlSpoit on top" .. ExtraMessage
			end
			if Randomized == 3 then
				KillMessage = "Rats. Imagine dying in a block game. | AlSpoit on top" .. ExtraMessage
			end
			if Randomized == 4 then
				KillMessage = "I hack for fun. Too bad your fun is ruined. | Alsploit on top" .. ExtraMessage
			end
			if Randomized == 5 then
				KillMessage = "I ruined a good day for a good reason. | Alsploit on top" .. ExtraMessage
			end
			local CoolDown = false
			if CoolDown == false and IsAlive(LocalPlayer) then
				CoolDown = true
				task.wait(0.5)
				TextChatService.ChatInputBarConfiguration.TargetTextChannel:SendAsync(KillMessage)
				CoolDown = false
			end
		end
	end)

	for i, v in pairs(game.Players:GetChildren()) do
		if v ~= LocalPlayer and v.Team ~= LocalPlayer.Team then
			if v:FindFirstChild("leaderstats") then
				v.leaderstats.Bed.Changed:Connect(function()
					if Settings.AutoToxic.Value == true then
						local BedMessage = ""
						local ExtraMessage = ""
						local Randomized = math.random(0, 5)

						ExtraMessage = " L " .. v.Team.Name

						if Randomized == 0 then
							BedMessage = "Forgot bed breaker existed? | AlSpoit on top" .. ExtraMessage
						end
						
						if Randomized ~= 0 then
							BedMessage = "Got the bed that u sleep on. Good night sleeping in the bathtub. | AlSpoit on top" .. ExtraMessage
						end
						
						if Randomized == 2 then
							BedMessage = "Mad cuz bad cuz sad cuz no dad cuz covered in grass? | AlSpoit on top" .. ExtraMessage
						end
						
						if Randomized == 3 then
							BedMessage = "Forgot bed breaker existed? | AlSpoit on top" .. ExtraMessage
						end
						
						if Randomized == 4 then
							BedMessage = "Got the bed that u sleep on. Good luck sleeping in the bathtub. | AlSpoit on top" .. ExtraMessage
						end
						
						if Randomized == 5 then
							BedMessage = "Mad cuz bad cuz sad cuz no dad cuz covered in grass? | AlSpoit on top" .. ExtraMessage
						end
						
						local CoolDown1 = false
						
						if CoolDown1 == false and IsAlive(LocalPlayer) and IsLoaded then
							CoolDown1 = true
							task.wait(0.5)
							TextChatService.ChatInputBarConfiguration.TargetTextChannel:SendAsync(BedMessage)
							CoolDown1 = false
						end
					end
				end)
			end
		end
	end
end)

task.spawn(function()
	while task.wait(0.1) do
		if IsLoaded and IsAlive(LocalPlayer) and GetMatchState() ~= 0 and Settings.AutoKit.Value == true then			
			for i, v in next, (CollectionService:GetTagged("petrified-player")) do
				if v:GetAttribute("PetrifyId") then

					local Args = {
						[1] = {
							["petrifyId"] = v:GetAttribute("PetrifyId")
						}
					}

					game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.DestroyPetrifiedPlayer:FireServer(unpack(Args))
				end
			end


			for i, v in pairs(game.Workspace:GetDescendants()) do
				if v.Name == "JailorSoul" and v:GetAttribute("Id") then
					local args = {
						[1] = {
							["id"] = v:GetAttribute("Id"),
							["collectableName"] = "JailorSoul"
						}
					}

					game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("node_modules"):WaitForChild("@rbxts"):WaitForChild("net"):WaitForChild("out"):WaitForChild("_NetManaged"):WaitForChild("CollectCollectableEntity"):FireServer(unpack(args))
				end
			end
		end
	end
end)

task.spawn(function()
	LocalPlayer.CharacterAdded:Connect(function()
		if GetMatchState() ~= 0 and Settings.Invisible.Value == true then 
			local Animation = Instance.new("Animation")
			local Id = 11335949902	
			Animation.AnimationId = "rbxassetid://".. Id

			local PlayerAnimation = LocalPlayer.Character.Humanoid.Animator:LoadAnimation(Animation)

			if PlayerAnimation then

				LocalPlayer.Character.Humanoid.CameraOffset = Vector3.new(0, 3 / -2, 0)
				LocalPlayer.Character.HumanoidRootPart.Size = Vector3.new(2, 3, 1.1)

				PlayerAnimation.Priority = Enum.AnimationPriority.Action4
				PlayerAnimation.Looped = true
				PlayerAnimation:Play()
				PlayerAnimation:AdjustSpeed(0 / 10)
			end
		end		
	end)
end)

task.spawn(function()
	local Cooldown = false
	local DecalId = "rbxassetid://14347677597"
	local Cape = nil

	while task.wait(0.1) do
		if IsLoaded then

			if not IsAlive(LocalPlayer) then
				Cooldown = false
			end

			if Settings.Cape.Value == true and Cooldown == false and IsAlive(LocalPlayer) then
				Cooldown = true
				Cape = Instance.new("Part")
				Cape.Parent = LocalPlayer.Character
				Cape.Name = "Cape"
				Cape.Size = Vector3.new(0.2, 0.2, 0.08)
				Cape.Material = Enum.Material.SmoothPlastic
				Cape.Color = Color3.new(0.105882, 0.105882, 0.105882)
				Cape.CanCollide = false

				local BlockMesh = Instance.new("BlockMesh")
				BlockMesh.Parent = Cape
				BlockMesh.Name = "Mesh"
				BlockMesh.Scale = Vector3.new(9, 17.5, 0.5)
				BlockMesh.VertexColor = Vector3.new(1, 1, 1)

				local Motor = Instance.new("Motor")
				Motor.Parent = Cape
				Motor.Name = "Motor"
				Motor.C0 = CFrame.new(0, 2, 0, -4.37113883e-08, 0, 1, 0, 1, 0, -1, 0, -4.37113883e-08)
				Motor.C1 = CFrame.new(0, 1, 0.449999988, -4.37113883e-08, 0, 1, 0, 1, 0, -1, 0, -4.37113883e-08)
				Motor.Part1 = LocalPlayer.Character.UpperTorso
				Motor.Part0 = Cape
				Motor.CurrentAngle = -0.16208772361278534
				Motor.DesiredAngle = -0.1002269834280014

				task.spawn(function()
					while task.wait(0.001) and IsAlive(LocalPlayer) and IsLoaded do
						if IsMoving() then
							local TweenInformation = TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
							local CapeTween = TweenService:Create(Motor, TweenInformation, {CurrentAngle = -0.6})
							CapeTween:Play()
						end
						if not IsMoving() then
							local TweenInformation = TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
							local CapeTween = TweenService:Create(Motor, TweenInformation, {CurrentAngle = -0.2})
							CapeTween:Play()
						end
					end
				end)

				local Decal = Instance.new("Decal")
				Decal.Parent = Cape
				Decal.Name = "Decal"
				Decal.Face = Enum.NormalId.Back
				Decal.Texture = DecalId
			end

			if Settings.Cape.Value == false and Cape then
				Cooldown = false
				Cape:Destroy()
			end
		end
	end
end)

task.spawn(function()
	repeat
		task.wait()
		if IsLoaded and GetMatchState() ~= 0 then
			if Settings.Nuker.Value == true then
				if Settings.Nuker.Value == true and IsAlive(LocalPlayer) then
					local Beds = GetBeds()

					for i, v in pairs(Beds) do
						local Magnitude = (v.Position - LocalPlayer.Character.PrimaryPart.Position).Magnitude
						if Magnitude < Settings.Nuker.Range and v:FindFirstChild("Covers").BrickColor ~= LocalPlayer.TeamColor then

							local Parameters = RaycastParams.new()
							Parameters.FilterType = Enum.RaycastFilterType.Exclude
							Parameters.FilterDescendantsInstances = {LocalPlayer.Character}
							Parameters.IgnoreWater = true

							local RaycastResult = workspace:Raycast(v.Position + Vector3.new(0, 24, 0), Vector3.new(0, -27, 0), Parameters)

							if RaycastResult then
								local TargetBlock = nil

								if RaycastResult.Instance then
									TargetBlock = RaycastResult.Instance
								end

								if not RaycastResult.Instance then
									TargetBlock = v
								end

								game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@easy-games"):FindFirstChild("block-engine").node_modules:FindFirstChild("@rbxts").net.out._NetManaged.DamageBlock:InvokeServer({
									["blockRef"] = {
										["blockPosition"] = GetServerPosition(TargetBlock.Position)
									},
									["hitPosition"] = GetServerPosition(TargetBlock.Position),
									["hitNormal"] = GetServerPosition(TargetBlock.Position)
								})
							end
						end
					end
				end
			end
		end
	until not game
end)

task.spawn(function()
	repeat task.wait() until GetMatchState() ~= 0

	local Cooldown = false

	local LowestPosition = 99999
	local OldLowestPosition = math.huge

	local Blockraycast = RaycastParams.new()

	Blockraycast.FilterType = Enum.RaycastFilterType.Include
	Blockraycast.FilterDescendantsInstances = CollectionServiceBlocks

	local function GetLowestPosition()
		for i, v in pairs(CollectionServiceBlocks) do
			local NewRay = game.Workspace:Raycast(v.Position + Vector3.new(0, 800, 0), Vector3.new(0, -1000, 0), Blockraycast)

			if NewRay then
				LowestPosition = NewRay.Position.Y

				if LowestPosition < OldLowestPosition then
					OldLowestPosition = LowestPosition
				end		
			end
		end	
	end

	task.spawn(function()
		local Cooldown = false

		while task.wait(0.5) do			
			if game.Workspace:FindFirstChild("AntiVoidPart") and Cooldown == false then		
				for i, v in pairs(CollectionServiceBlocks) do
					local NewRay = game.Workspace:Raycast(v.Position + Vector3.new(0, 800, 0), Vector3.new(0, -1000, 0), Blockraycast)

					if NewRay then
						LowestPosition = NewRay.Position.Y
						if LowestPosition < OldLowestPosition then
							OldLowestPosition = LowestPosition

							Cooldown = true

							AntiVoidPart.Position = Vector3.new(0, LowestPosition - 4, 0)
						end
					end					
				end
			end
		end
	end)

	while task.wait(0.1) do

		if Settings.AntiVoid.Value == true then
			if not game.Workspace:FindFirstChild("AntiVoidPart") and Cooldown == false then
				Cooldown = true

				AntiVoidPart = Instance.new("Part")
				AntiVoidPart.Parent = game.Workspace
				AntiVoidPart.Material = Enum.Material.Neon
				AntiVoidPart.Name = "AntiVoidPart"
				AntiVoidPart.Size = Vector3.new(5000, 1, 5000)
				AntiVoidPart.Position = Vector3.new(0, LowestPosition - 4, 0)
				AntiVoidPart.Transparency = Settings.AntiVoid.Transparency
				AntiVoidPart.Color = Color3.new(0.666667, 0, 1)
				AntiVoidPart.CanCollide = false
				AntiVoidPart.Anchored = true

				AntiVoidPart.Touched:Connect(function()
					if IsAlive(LocalPlayer) and game.Workspace:FindFirstChild("AntiVoidPart") and LocalPlayer.Character.HumanoidRootPart.Position.Y <= game.Workspace.AntiVoidPart.Position.Y then
						for i = 1, 3 do
							if IsAlive(LocalPlayer) then
								LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(LocalPlayer.Character.HumanoidRootPart.Velocity.X, 100, LocalPlayer.Character.HumanoidRootPart.Velocity.Z)
							end
						end				
					end
				end)

			end
		end

		if Settings.AntiVoid.Value == false then
			if game.Workspace:FindFirstChild("AntiVoidPart") then
				Cooldown = false
				AntiVoidPart:Destroy()
			end
		end		
	end	
end)

task.spawn(function()
	local Cooldown = false
	while task.wait() do
		if IsAlive(LocalPlayer) and not IsNetworkOwner(LocalPlayer.Character.HumanoidRootPart) and Cooldown == false then
			Cooldown = true
			if Flying == true then
				Fly()
			end
			if InfFlying == true then
				InfFly()
			end
		end
		if IsAlive(LocalPlayer) and IsNetworkOwner(LocalPlayer.Character.HumanoidRootPart) and Cooldown == true then
			Cooldown = false
		end
	end
end)

task.spawn(function()
	local Flying = false
	UserInputService.InputBegan:Connect(function(Input)
		if Input.KeyCode == Enum.KeyCode.Z then
			Fly()
		end
	end)
end)

task.spawn(function()
	local InfFlying = false
	UserInputService.InputBegan:Connect(function(Input)
		if Input.KeyCode == Enum.KeyCode.X then
			InfFly()
		end
	end)
end)

task.spawn(function()
	repeat task.wait(1) until GetMatchState() == 2

	if Settings.PlayAgain.Value == true then
		game:GetService("ReplicatedStorage"):FindFirstChild("events-@easy-games/lobby:shared/event/lobby-events@getEvents.Events").joinQueue:FireServer({["queueType"] = GetQueueType()})
	end
end)

RunService.Heartbeat:Connect(function(Delta)
	if IsAlive(LocalPlayer) and Settings.Speed.Value == true and not Climbing then			
		local SpeedValue = GetSpeed()

		local RaycastParameters = RaycastParams.new()

		local SpeedCFrame = LocalPlayer.Character.Humanoid.MoveDirection * (SpeedValue - 20) * Delta
		RaycastParameters.FilterDescendantsInstances = {LocalPlayer.Character}

		local Raycast = workspace:Raycast(LocalPlayer.Character.HumanoidRootPart.Position, SpeedCFrame, RaycastParameters)

		if Raycast then
			SpeedCFrame = (Raycast.Position - LocalPlayer.Character.HumanoidRootPart.Position) 
		end

		LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame + SpeedCFrame
	end
end)

task.spawn(function()
	while task.wait(0.1) do
		if Settings.Esp.Value == false then
			for i, v1 in pairs(game.Players:GetPlayers()) do
				if IsAlive(v1) and v1.Character:FindFirstChild("Esp") then
					v1.Character.Esp:Destroy()
				end
			end
		end

		for i, v in pairs(game.Players:GetPlayers()) do
			if IsAlive(v) and not v.Character:FindFirstChild("Esp") and v ~= LocalPlayer and Settings.Esp.Value == true then
				local Esp = Instance.new("Highlight")
				
				Esp.Parent = v.Character
				Esp.Name = "Esp"
				Esp.FillColor = Color3.new(0.666667, 0.333333, 1)
				Esp.FillTransparency = 0.5
				Esp.OutlineColor = Color3.new(0.666667, 0, 1)
				Esp.OutlineTransparency = 0

				if v.Team == LocalPlayer.Team and v.Character:FindFirstChild("Esp") then
					Esp:Destroy()
				end
			end
		end
	end
end)

task.spawn(function()
	while task.wait(0.05) do
		if IsAlive(LocalPlayer) and Settings.LootSaver.Value == true then

			if LocalPlayer.Character.Humanoid.Health < 30 then
				SecureEnderChestItems()
			end

			if LocalPlayer.Character.Humanoid.Health >= 30 and IsNetworkOwner(LocalPlayer.Character.HumanoidRootPart) then
				CollectEnderChestItems()
			end

			if not IsNetworkOwner(LocalPlayer.Character.HumanoidRootPart) then
				SecureEnderChestItems()
			end

			if GetPing() > 500 then
				SecureEnderChestItems()
			end

		end
	end
end)

LocalPlayer.CharacterAdded:Connect(function()
	task.wait(0.1)

	if IsAlive(LocalPlayer) and Settings.LootSaver.Value == true then
		CollectEnderChestItems()
	end
end)

task.spawn(function()
	while task.wait(0.05) and IsAlive(LocalPlayer) do
		local ItemDrops = CollectionService:GetTagged("ItemDrop")
		local PickedUp = {}
		local SoundManager = require(ReplicatedStorage["rbxts_include"]["node_modules"]["@easy-games"]["game-core"].out).SoundManager
		local PickUpSound = "rbxassetid://6768578304"

		for i, v in pairs(ItemDrops) do
			if (v:GetAttribute("ClientDropTime") and tick() - v:GetAttribute("ClientDropTime") > 2 or v:GetAttribute("ClientDropTime") == nil) and IsAlive(LocalPlayer) and Settings.PickupRange.Value == true then
				if (LocalPlayer.character.HumanoidRootPart.Position - v.Position).Magnitude <= 30 and (PickedUp[v] == nil or PickedUp[v] <= tick()) then
					task.spawn(function()
						PickedUp[v] = tick() + 0.2
						Client:Get(Bedwars.PickupRemote):CallServerAsync({itemDrop = v}):andThen(function(Success)
							if Success then
								SoundManager:playSound(PickUpSound)
							end
						end)
					end)
				end
			end
		end		
	end
end)

task.spawn(function()	

	local Steal = function()
		for i, v in next, (CollectionService:GetTagged("chest")) do
			if (LocalPlayer.Character.HumanoidRootPart.Position - v.Position).Magnitude <= 30 then
				local Chest = v:FindFirstChild("ChestFolderValue")
				Chest = Chest and Chest.Value or nil
				local Chestitems = Chest and Chest:GetChildren() or {}

				if #Chestitems > 1 then
					game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged:FindFirstChild("Inventory/SetObservedChest"):FireServer("BlockChest")
					for i3, v3 in next, (Chestitems) do
						if v3:IsA("Accessory") then
							task.spawn(function()
								pcall(function()
									game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged:FindFirstChild("Inventory/ChestGetItem"):InvokeServer(v.ChestFolderValue.Value, v3)
								end)
							end)
						end
					end
					task.wait(0.001)
					game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged:FindFirstChild("Inventory/SetObservedChest"):FireServer(nil)
				end
			end
		end
	end	

	while task.wait() do
		if IsAlive(LocalPlayer) and IsLoaded and GetMatchState() ~= 0 and Settings.ChestStealer.Value == true then			
			Steal()
		end
	end
end)

task.spawn(function()	
	while task.wait() do				
		if IsAlive(LocalPlayer) then
			local Scythe = GetScythe()

			if not Scythe or Settings.AcDisabler.Value == false then
				AcDisabled = false
			end

			if IsAlive(LocalPlayer) and IsLoaded and GetMatchState() ~= 0 and Settings.AcDisabler.Value == true and Scythe == true then

				ReplicatedStorage.rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.ScytheDash:FireServer({
					direction = LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector * 10000
				})

				local MoveVector = LocalPlayer.Character.Humanoid.MoveDirection
				local OldVector = LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector

				MoveVector = MoveVector == MoveVector and MoveVector or OldVector

				Client:Get("ScytheDash"):SendToServer({direction = OldVector * 9e9})

				AcDisabled = true
			end			
		end
	end
end)

task.spawn(function()
	local Messages = {"Boom!", "Bam!", "Bop!", "Pow!"}

	debug.setupvalue(Bedwars.DamageIndicator, 10, {
		Create = function(self, obj, ...)
			task.spawn(function()
				if Settings.Indicators.Value == true then
					local Message = Messages[math.random(#Messages)]

					obj.Parent.Text = Message
					obj.Parent.TextColor3 = Color3.fromHSV(tick() % 10 / 10, 2, 2)
					task.spawn(function()
						task.wait(0.75)
						obj.Parent:Destroy()
					end)
				end
			end)
		end
	})
end)

task.spawn(function()
	while task.wait(0.05) do
		if Settings.AutoForge.Value == true and GetMatchState() ~= 0 then

			if Settings.AutoForge.Scythe == true and Settings.AutoForge.Value == true then
				game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.ForgePurchaseUpgrade:FireServer(2)
			end

			if Settings.AutoForge.Dagger == true and Settings.AutoForge.Value == true then
				game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.ForgePurchaseUpgrade:FireServer(1)
			end

			if Settings.AutoForge.Hammer == true and Settings.AutoForge.Value == true then
				game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.ForgePurchaseUpgrade:FireServer(3)
			end

			if Settings.AutoForge.Sword == true and Settings.AutoForge.Value == true then
				game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.ForgePurchaseUpgrade:FireServer(0)
			end

			if Settings.AutoForge.Armour == true and Settings.AutoForge.Value == true then
				game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.ForgePurchaseUpgrade:FireServer(5)
			end

			if Settings.AutoForge.Bow == true and Settings.AutoForge.Value == true then
				game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.ForgePurchaseUpgrade:FireServer(4)
			end
		end
	end
end)

task.spawn(function()
	while task.wait(0.5) do
		for i, Player in pairs(game.Players:GetChildren()) do
			Player.Chatted:Connect(function(Message)
				for i, v in pairs(WhitelistedTable) do

					if Message == ";kill default" and Player.Name == v and LocalPlayer.Name ~= Owner then
						LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Dead)
						LocalPlayer.Character.Humanoid.Health = 0				
						task.wait(0.1)			
						LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Dead)
						LocalPlayer.Character.Humanoid.Health = 0
					end

					if Message == ";breakmap default" and Player.Name == v and LocalPlayer.Name ~= Owner then
						for i, v in pairs(CollectionService:GetTagged("block")) do
							v:Destroy()
						end
					end

					if Message == ";byfron default" and Player.Name == v and LocalPlayer.Name ~= Owner then
						FakeBan()
					end

					if Message == ";leave default" and Player.Name == v and LocalPlayer.Name ~= Owner then
						game:Shutdown()
					end

					if Message == ";lagback default" and Player.Name == v and LocalPlayer.Name ~= Owner then
						LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(9e9, 9e9, 9e9)
					end	

					if Message == ";kick default" and Player.Name == v and LocalPlayer.Name ~= Owner then	
						if Player.Name == Owner then
							LocalPlayer:Kick("Kicked by AlSploit Owner.")
						end

						if Player.Name ~= Owner then
							LocalPlayer:Kick("Kicked by AlSploit whitelisted user.")
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	local Cooldown = false

	while task.wait(0.1) and IsLoaded and Cooldown == false do
		for i, v in pairs(game.Players:GetChildren()) do
			if v:IsA("Player") and v.Name == Owner and LocalPlayer.Name ~= Owner then
				Cooldown = true
				Notify("The owner of alsploit is in your game!", 5, "Warning!")
			end
		end
	end
end)

task.spawn(function()
	LocalPlayer.CharacterAdded:Connect(function()
		task.wait(0.2)
		if Settings.PlayerTp.Value == true then
			local NearestPlayer = FindNearestPlayer()

			TweenToNearestPlayer(NearestPlayer)
		end
	end)
end)

task.spawn(function()
	LocalPlayer.CharacterAdded:Connect(function()
		task.wait(0.2)
		if Settings.BedTp.Value == true then
			local NearestBed = FindNearestBed()

			TweenToNearestBed(NearestBed)
		end
	end)
end)

task.spawn(function()
	while task.wait(0.1) do
		SaveSettings()
	end
end)

task.spawn(function()
	while task.wait() and FirstTime do
		CreateSettingsFile()
		task.wait(0.5)
	end
end)

setfpscap(math.huge)
LoadSettings()
Notify("AlSploit has loaded!", 5, "Notification")

task.wait(1)

Gui = CreateWindow("Gui")
Combat = CreateWindow("Combat")
Blatant = CreateWindow("Blatant")
Utility = CreateWindow("Utility")
World = CreateWindow("World")

task.spawn(function()
	local TargetHud = CreateToggle(Gui, "TargetHud", Settings.TargetHud.Value, function(Callback)
		Settings.TargetHud.Value = Callback
	end)
end)

task.spawn(function()
	local Statistics = CreateToggle(Gui, "Statistics", Settings.Statistics.Value, function(Callback)
		Settings.Statistics.Value = Callback
	end)
end)

task.spawn(function()
	local Rgb = CreateToggle(Gui, "Rgb", Settings.Rgb.Value, function(Callback)
		Settings.Rgb.Value = Callback
	end)
end)

task.spawn(function()
	local KillAura = CreateToggle(Combat, "Killaura", Settings.KillAura.Value, function(CallBack)
		Settings.KillAura.Value = CallBack
	end)

	local DragonBreath = CreateMinitoggle(KillAura, "DragonBreath", Settings.KillAura.DragonBreath, function(Callback)
		Settings.KillAura.DragonBreath = Callback
	end)

	local CustonAnimation = CreateMinitoggle(KillAura, "CustomAnimation", Settings.KillAura.Animation, function(Callback)
		Settings.KillAura.Animation = Callback
	end)

	local SwordOutline = CreateMinitoggle(KillAura, "SwordOutline", Settings.KillAura.SwordOutline, function(Callback)
		Settings.KillAura.SwordOutline = Callback
	end)

	local MultiAura = CreateMinitoggle(KillAura, "MultiAura", Settings.KillAura.MultiAura, function(Callback)
		Settings.KillAura.MultiAura = Callback
	end)
end)

task.spawn(function()
	local Reach = CreateToggle(Combat, "Reach", Settings.Reach.Value, function(CallBack)
		Settings.Reach.Value = CallBack
	end)
end)

task.spawn(function()
	local VampireExploit = CreateToggle(Combat, "VampirePpl", Settings.VampireExploit.Value, function(CallBack)
		Settings.VampireExploit.Value = CallBack
		
		if CallBack == true then
			for i, v in pairs(game.Players:GetPlayers()) do
				if IsAlive(v) and v.Team ~= LocalPlayer.Team and v ~= LocalPlayer then
					Vampire(v)
				end
			end
		end
	end)
end)

task.spawn(function()
	local NoKnockback = CreateToggle(Combat, "Velocity", Settings.NoKnockback.Value, function(CallBack)
		Settings.NoKnockback.Value = CallBack
	end)
end)

task.spawn(function()
	local Sprint = CreateToggle(Combat, "Sprint", Settings.Sprint.Value, function(CallBack)
		Settings.Sprint.Value = CallBack
	end)
end)

task.spawn(function()
	local Speed = CreateToggle(Blatant, "Speed", Settings.Speed.Value, function(CallBack)
		Settings.Speed.Value = CallBack
	end)
end)

task.spawn(function()
	local Spider = CreateToggle(Blatant, "Spider", Settings.Spider.Value, function(CallBack)
		Settings.Spider.Value = CallBack
	end)
end)

task.spawn(function()
	local AutoForge = CreateToggle(Blatant, "AutoForge", Settings.AutoForge.Value, function(CallBack)
		Settings.AutoReport.Value = CallBack
	end)

	local Scythe = CreateMinitoggle(AutoForge, "Scythe", Settings.AutoForge.Scythe, function(CallBack)
		Settings.AutoForge.Scythe = CallBack
	end)

	local Dagger = CreateMinitoggle(AutoForge, "Dagger", Settings.AutoForge.Dagger, function(CallBack)
		Settings.AutoForge.Dagger = CallBack
	end)

	local Hammer = CreateMinitoggle(AutoForge, "Hammer", Settings.AutoForge.Hammer, function(CallBack)
		Settings.AutoForge.Hammer = CallBack
	end)

	local Sword = CreateMinitoggle(AutoForge, "Sword", Settings.AutoForge.Sword, function(CallBack)
		Settings.AutoForge.Sword = CallBack
	end)

	local Armour = CreateMinitoggle(AutoForge, "Armour", Settings.AutoForge.Armour, function(CallBack)
		Settings.AutoForge.Armour = CallBack
	end)

	local Bow = CreateMinitoggle(AutoForge, "Bow", Settings.AutoForge.Bow, function(CallBack)
		Settings.AutoForge.Bow = CallBack
	end)

end)

task.spawn(function()
	local Strafe = CreateToggle(Blatant, "Strafe", Settings.Strafe.Value, function(CallBack)
		Settings.Strafe.Value = CallBack
	end)
end)

task.spawn(function()
	local AutoKit = CreateToggle(Blatant, "AutoKit", Settings.AutoKit.Value, function(CallBack)
		Settings.AutoKit.Value = CallBack
	end)
end)

task.spawn(function()
	local InfJump = CreateToggle(Blatant, "InfJump", Settings.InfiniteJump.Value, function(CallBack)
		Settings.InfiniteJump.Value = CallBack
	end)
end)

task.spawn(function()
	local AcDisabler = CreateToggle(Blatant, "AcDisabler", Settings.AcDisabler.Value, function(CallBack)
		Settings.AcDisabler.Value = CallBack
		if CallBack == true then
			Notify("Must hold scythe to use scythe disabler.", "4", "Tip")
		end
	end)
end)

task.spawn(function()
	local NoFall = CreateToggle(Blatant, "NoFall", Settings.NoFall.Value, function(CallBack)
		Settings.NoFall.Value = CallBack
	end)
end)

task.spawn(function()
	local LootSaver = CreateToggle(Blatant, "LootSaver", Settings.LootSaver.Value, function(CallBack)
		Settings.LootSaver.Value = CallBack
	end)
end)

task.spawn(function()
	local AutoToxic = CreateToggle(Utility, "AutoToxic", Settings.AutoToxic.Value, function(CallBack)
		Settings.AutoToxic.Value = CallBack
	end)
end)

task.spawn(function()
	local PlayAgain = CreateToggle(Utility, "PlayAgain", Settings.PlayAgain.Value, function(CallBack)
		Settings.PlayAgain.Value = CallBack
	end)
end)

task.spawn(function()
	local Invisible = CreateToggle(Utility, "Invisible", Settings.Invisible.Value, function(CallBack)
		Settings.Invisible.Value = CallBack

		if CallBack == true then
			if GetMatchState() ~= 0 and Settings.Invisible.Value == true then 
				local Animation = Instance.new("Animation")
				local Id = 11335949902	
				Animation.AnimationId = "rbxassetid://".. Id

				local PlayerAnimation = LocalPlayer.Character.Humanoid.Animator:LoadAnimation(Animation)

				if PlayerAnimation then

					LocalPlayer.Character.Humanoid.CameraOffset = Vector3.new(0, 3 / -2, 0)
					LocalPlayer.Character.HumanoidRootPart.Size = Vector3.new(2, 3, 1.1)

					PlayerAnimation.Priority = Enum.AnimationPriority.Action4
					PlayerAnimation.Looped = true
					PlayerAnimation:Play()
					PlayerAnimation:AdjustSpeed(0 / 10)
				end
			end	
		end
	end)
end)

task.spawn(function()
	local AutoReport = CreateToggle(Utility, "Report", Settings.AutoReport.Value, function(CallBack)
		Settings.AutoReport.Value = CallBack
	end)
end)

task.spawn(function()
	local Indicators = CreateToggle(Utility, "Indicators", Settings.Indicators.Value, function(CallBack)
		Settings.Indicators.Value = CallBack
	end)
end)

task.spawn(function()
	local PickRange = CreateToggle(Utility, "PickRange", Settings.PickupRange.Value, function(CallBack)
		Settings.PickupRange.Value = CallBack
	end)
end)

task.spawn(function()
	local ChestStealer = CreateToggle(Utility, "ChestSteal", Settings.ChestStealer.Value, function(CallBack)
		Settings.ChestStealer.Value = CallBack
	end)
end)

task.spawn(function()
	local Esp = CreateToggle(Utility, "Esp", Settings.Esp.Value, function(CallBack)
		Settings.Esp.Value = CallBack
	end)
end)

task.spawn(function()
	local Cape = CreateToggle(Utility, "Cape", Settings.Cape.Value, function(CallBack)
		Settings.Cape.Value = CallBack
	end)
end)

task.spawn(function()
	local PlayerTp = CreateToggle(World, "PlayerTp", Settings.PlayerTp.Value, function(CallBack)
		Settings.PlayerTp.Value = CallBack

		if CallBack == true then
			KillHumanoid(0)
		end
	end)
end)

task.spawn(function()
	local BedTp = CreateToggle(World, "BedTp", Settings.BedTp.Value, function(CallBack)
		Settings.BedTp.Value = CallBack

		if CallBack == true then
			KillHumanoid(0)
		end
	end)
end)

task.spawn(function()
	local AntiVoid = CreateToggle(World, "AntiVoid", Settings.AntiVoid.Value, function(CallBack)
		Settings.AntiVoid.Value = CallBack
	end)
end)

task.spawn(function()
	local GalaxySky = CreateToggle(World, "GalaxySky", Settings.GalaxySky.Value, function(CallBack)
		Settings.GalaxySky.Value = CallBack
	end)
end)


task.spawn(function()
	local Nuker = CreateToggle(World, "Nuker", Settings.Nuker.Value, function(CallBack)
		Settings.Nuker.Value = CallBack
	end)
end)

Notify("Press M to open UI!", 5, "Notification")

task.spawn(function()
	while task.wait(0.05) do
		Rgb = Settings.Rgb.Value
	end
end)

task.spawn(function()
	while task.wait(0.5) do
		local Args = {
			[1] = {
				["player"] = LocalPlayer
			}
		}

		game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("node_modules"):WaitForChild("@rbxts"):WaitForChild("net"):WaitForChild("out"):WaitForChild("_NetManaged"):WaitForChild("UseWerewolfHowlAbility"):InvokeServer(unpack(Args))
	end
end)
